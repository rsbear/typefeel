{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepOne.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex } from \"@rsbear/betsy\";\n\nvar StepOne = function StepOne(_ref) {\n  _s();\n\n  var setStepOneComplete = _ref.setStepOneComplete;\n\n  var _useKeyboardForm = useKeyboardForm(),\n      values = _useKeyboardForm.values,\n      setString = _useKeyboardForm.setString;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"name & brand\"), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: values.name,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"brand\",\n    name: \"brand\",\n    value: values.brand,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"size\",\n    name: \"size\",\n    value: values.size,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"mount\",\n    name: \"mount\",\n    value: values.mount,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"typing angle\",\n    name: \"angle\",\n    value: values.angle,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"connection\",\n    name: \"connection\",\n    value: values.connection,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"pcb\",\n    name: \"pcb\",\n    value: values.pcb,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"firmware\",\n    name: \"firmware\",\n    value: values.firmware,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"do you want to provide colors\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setStepOneComplete();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"next\"));\n};\n\n_s(StepOne, \"HyNwmskia7WqWOw9xF5DBrKBEzo=\", false, function () {\n  return [useKeyboardForm];\n});\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"sources":["/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepOne.tsx"],"names":["useKeyboardForm","Flex","StepOne","setStepOneComplete","values","setString","name","e","brand","size","mount","angle","connection","pcb","firmware"],"mappings":"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","sourcesContent":["import { FC } from \"react\";\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex } from \"@rsbear/betsy\";\n\ninterface P {\n  setStepOneComplete: Function;\n}\n\nconst StepOne: FC<P> = ({ setStepOneComplete }) => {\n  const { values, setString } = useKeyboardForm();\n\n  return (\n    <div>\n      <p>name & brand</p>\n      <Flex>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={values.name}\n          onChange={(e) => setString(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"brand\"\n          name=\"brand\"\n          value={values.brand}\n          onChange={(e) => setString(e)}\n        />\n      </Flex>\n\n      <Flex>\n        <input\n          type=\"text\"\n          placeholder=\"size\"\n          name=\"size\"\n          value={values.size}\n          onChange={(e) => setString(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"mount\"\n          name=\"mount\"\n          value={values.mount}\n          onChange={(e) => setString(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"typing angle\"\n          name=\"angle\"\n          value={values.angle}\n          onChange={(e) => setString(e)}\n        />\n      </Flex>\n\n      <Flex>\n        <input\n          type=\"text\"\n          placeholder=\"connection\"\n          name=\"connection\"\n          value={values.connection}\n          onChange={(e) => setString(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"pcb\"\n          name=\"pcb\"\n          value={values.pcb}\n          onChange={(e) => setString(e)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"firmware\"\n          name=\"firmware\"\n          value={values.firmware}\n          onChange={(e) => setString(e)}\n        />\n      </Flex>\n\n      <p>do you want to provide colors</p>\n\n      <button onClick={() => setStepOneComplete()}>next</button>\n    </div>\n  );\n};\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}