{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepTwo.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex, BorderBox, Sans, Grid, Button, Icon } from \"@rsbear/betsy\";\nimport { useThemer } from \"../../hooks/useThemer\";\nimport { Input } from \"../UI/Input\";\n/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\n\nconst StepTwo = ({\n  setStepTwoComplete\n}) => {\n  const {\n    values,\n    setBoolean,\n    setString,\n    setObjArray\n  } = useKeyboardForm();\n  const theme = useThemer();\n  return jsx(React.Fragment, null, jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Layouts\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Layout e.g. WKL, WK, HHKB\",\n    name: \"layouts\",\n    value: values.connection,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Support\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Editions\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Cases\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Plates\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: `solid 1px ${theme.colors.dividerColor}`,\n    borderRadius: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Weight & finish\"), jsx(Grid, {\n    css: () => gridify(theme),\n    columnGap: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: e => setString(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: () => {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))), jsx(Flex, {\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontSize: \"16px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Will extra plates be available?\"), jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: 1,\n    onClick: e => setBoolean(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, !values.extraPlates ? \"yes\" : \"yes already selected\"), jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: null,\n    onClick: e => setBoolean(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, !values.extraPlates ? \"no - selected\" : \"no\"))), jsx(Flex, {\n    justifyContent: \"flex-end\",\n    my: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, jsx(Button, {\n    text: \"Previous\",\n    onClick: () => {},\n    color: theme.colors.text,\n    mr: \"25px\",\n    backgroundColor: \"transparent\",\n    icon: jsx(Icon, {\n      icon: \"arrow-left\",\n      size: \"14px\",\n      mr: \"15px\",\n      color: theme.colors.dividerColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }), jsx(Button, {\n    text: \"Next\",\n    onClick: () => setStepTwoComplete(),\n    backgroundColor: theme.colors.primaryAccent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StepTwo;\n\nconst gridify = theme => css`\n  grid-template-columns: 1fr 140px;\n  grid-column-gap: 15px;\n\n  button {\n    border-color: ${theme.colors.primaryAccent};\n  }\n`;","map":{"version":3,"sources":["/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepTwo.tsx"],"names":["useKeyboardForm","Flex","BorderBox","Sans","Grid","Button","Icon","useThemer","Input","jsx","css","StepTwo","setStepTwoComplete","values","setBoolean","setString","setObjArray","theme","colors","dividerColor","gridify","connection","e","primaryAccent","support","extraPlates","text"],"mappings":"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","sourcesContent":["import { FC } from \"react\";\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex, BorderBox, Sans, Grid, Button, Icon } from \"@rsbear/betsy\";\nimport { useThemer } from \"../../hooks/useThemer\";\nimport { Input } from \"../UI/Input\";\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { ITheme } from \"../../lib/types\";\n\n// extraPcbs: boolean;\n// extraPlates: boolean;\n// layouts: string[] | null;\n// switchSupport?: string[] | null;\n// editions: string[] | null;\n// cases: ICase[];\n// plates: IPlate[];\n\ninterface P {\n  setStepTwoComplete: Function;\n}\n\nconst StepTwo: FC<P> = ({ setStepTwoComplete }) => {\n  const { values, setBoolean, setString, setObjArray } = useKeyboardForm();\n  const theme = useThemer();\n\n  return (\n    <>\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Layouts\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Layout e.g. WKL, WK, HHKB\"\n            name=\"layouts\"\n            value={values.connection}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Support\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Editions\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Cases\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Plates\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Weight &amp; finish\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <Flex justifyContent=\"space-between\">\n        <Sans fontSize=\"16px\">Will extra plates be available?</Sans>\n        <Flex>\n          <button\n            type=\"button\"\n            name=\"extraPlates\"\n            value={1}\n            onClick={(e) => setBoolean(e)}\n          >\n            {!values.extraPlates ? \"yes\" : \"yes already selected\"}\n          </button>\n          <button\n            type=\"button\"\n            name=\"extraPlates\"\n            value={null}\n            onClick={(e) => setBoolean(e)}\n          >\n            {!values.extraPlates ? \"no - selected\" : \"no\"}\n          </button>\n        </Flex>\n      </Flex>\n\n      <Flex justifyContent=\"flex-end\" my=\"40px\">\n        <Button\n          text=\"Previous\"\n          onClick={() => {}}\n          color={theme.colors.text}\n          mr=\"25px\"\n          backgroundColor=\"transparent\"\n          icon={\n            <Icon\n              icon=\"arrow-left\"\n              size=\"14px\"\n              mr=\"15px\"\n              color={theme.colors.dividerColor}\n            />\n          }\n        />\n        <Button\n          text=\"Next\"\n          onClick={() => setStepTwoComplete()}\n          backgroundColor={theme.colors.primaryAccent}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default StepTwo;\n\nconst gridify = (theme: ITheme) => css`\n  grid-template-columns: 1fr 140px;\n  grid-column-gap: 15px;\n\n  button {\n    border-color: ${theme.colors.primaryAccent};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}