{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rsbear/projects/typefeel/web/pages/create/keyboard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport NoNavLayout from \"../../components/Layouts/NoNavLayout\";\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex } from \"@rsbear/betsy\";\n\nvar CreateKeyboard = function CreateKeyboard() {\n  _s();\n\n  var _useKeyboardForm = useKeyboardForm(),\n      values = _useKeyboardForm.values,\n      changeStringInArray = _useKeyboardForm.changeStringInArray,\n      setBoolean = _useKeyboardForm.setBoolean,\n      setString = _useKeyboardForm.setString;\n\n  function onSubmit() {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _event;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              (_event = event) === null || _event === void 0 ? void 0 : _event.preventDefault();\n              console.log(\"values\", values);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  return __jsx(NoNavLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Create Keyboard\"), __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"part on\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"part two\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"part three\")), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"name\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: values.name,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"size\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"size\",\n    name: \"size\",\n    value: values.size,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"extra plates\"), __jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: 1,\n    onClick: function onClick(e) {\n      return setBoolean(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, !values.extraPlates ? \"yes\" : \"yes already selected\"), __jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: null,\n    onClick: function onClick(e) {\n      return setBoolean(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, !values.extraPlates ? \"no - selected\" : \"no\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"colors\",\n    value: values.colors[0],\n    tabIndex: 0,\n    onChange: function onChange(e) {\n      return changeStringInArray(e, e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"submit\")));\n};\n\n_s(CreateKeyboard, \"BK83hV7ovMOpRyEKatQ+Zyna+TU=\", false, function () {\n  return [useKeyboardForm];\n});\n\n_c = CreateKeyboard;\nexport default CreateKeyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateKeyboard\");","map":{"version":3,"sources":["/Users/rsbear/projects/typefeel/web/pages/create/keyboard.tsx"],"names":["React","NoNavLayout","useKeyboardForm","Flex","CreateKeyboard","values","changeStringInArray","setBoolean","setString","onSubmit","event","preventDefault","console","log","name","e","size","extraPlates","colors","target","value"],"mappings":"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","sourcesContent":["import React, { FC } from \"react\";\nimport NoNavLayout from \"../../components/Layouts/NoNavLayout\";\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex } from \"@rsbear/betsy\";\n\nconst CreateKeyboard: FC<any> = () => {\n  const {\n    values,\n    changeStringInArray,\n    setBoolean,\n    setString,\n  } = useKeyboardForm();\n\n  async function onSubmit() {\n    event?.preventDefault();\n    console.log(\"values\", values);\n  }\n\n  return (\n    <NoNavLayout>\n      <h1>Create Keyboard</h1>\n      <Flex>\n        <div>part on</div>\n        <div>part two</div>\n        <div>part three</div>\n      </Flex>\n      <form onSubmit={onSubmit}>\n        <p>name</p>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={values.name}\n          onChange={(e) => setString(e)}\n        />\n        <p>size</p>\n        <input\n          type=\"text\"\n          placeholder=\"size\"\n          name=\"size\"\n          value={values.size}\n          onChange={(e) => setString(e)}\n        />\n        <p>extra plates</p>\n        <button\n          type=\"button\"\n          name=\"extraPlates\"\n          value={1}\n          onClick={(e) => setBoolean(e)}\n        >\n          {!values.extraPlates ? \"yes\" : \"yes already selected\"}\n        </button>\n        <button\n          type=\"button\"\n          name=\"extraPlates\"\n          value={null}\n          onClick={(e) => setBoolean(e)}\n        >\n          {!values.extraPlates ? \"no - selected\" : \"no\"}\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"colors\"\n          value={values.colors[0]}\n          tabIndex={0}\n          onChange={(e) => changeStringInArray(e, e.target.value)}\n        />\n        <button type=\"submit\">submit</button>\n      </form>\n    </NoNavLayout>\n  );\n};\n\nexport default CreateKeyboard;\n"]},"metadata":{},"sourceType":"module"}