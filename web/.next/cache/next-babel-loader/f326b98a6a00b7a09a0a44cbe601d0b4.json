{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepTwo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-template-columns: 1fr 140px;\\n  grid-column-gap: 15px;\\n\\n  button {\\n    border-color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex, BorderBox, Sans, Grid, Button, Icon } from \"@rsbear/betsy\";\nimport { useThemer } from \"../../hooks/useThemer\";\nimport { Input } from \"../UI/Input\";\n/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\n\nvar StepTwo = function StepTwo(_ref) {\n  _s();\n\n  var setStepTwoComplete = _ref.setStepTwoComplete;\n\n  var _useKeyboardForm = useKeyboardForm(),\n      values = _useKeyboardForm.values,\n      setBoolean = _useKeyboardForm.setBoolean,\n      setString = _useKeyboardForm.setString,\n      setObjArray = _useKeyboardForm.setObjArray;\n\n  var theme = useThemer();\n  return jsx(React.Fragment, null, jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: \"solid 1px \".concat(theme.colors.dividerColor),\n    borderRadius: \"4px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Layouts\"), jsx(Grid, {\n    css: function css() {\n      return gridify(theme);\n    },\n    columnGap: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Layout e.g. WKL, WK, HHKB\",\n    name: \"layouts\",\n    value: values.connection,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: function onClick() {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), jsx(BorderBox, {\n    p: \"10px 20px\",\n    my: \"20px\",\n    border: \"solid 1px \".concat(theme.colors.dividerColor),\n    borderRadius: \"4px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontWeight: 600,\n    fontSize: \"14px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Support\"), jsx(Grid, {\n    css: function css() {\n      return gridify(theme);\n    },\n    columnGap: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, jsx(Input, {\n    icon: \"at-sign\",\n    placeholder: \"Support e.g. ANSI, ISO\",\n    name: \"support\",\n    value: values.support,\n    onChange: function onChange(e) {\n      return setString(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), jsx(Button, {\n    text: \"Add another\",\n    onClick: function onClick() {},\n    variant: \"secondary\",\n    height: \"36px\",\n    color: theme.colors.primaryAccent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), jsx(Flex, {\n    justifyContent: \"space-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, jsx(Sans, {\n    fontSize: \"16px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Will extra plates be available?\"), jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: 1,\n    onClick: function onClick(e) {\n      return setBoolean(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, !values.extraPlates ? \"yes\" : \"yes already selected\"), jsx(\"button\", {\n    type: \"button\",\n    name: \"extraPlates\",\n    value: null,\n    onClick: function onClick(e) {\n      return setBoolean(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, !values.extraPlates ? \"no - selected\" : \"no\"))), jsx(Flex, {\n    justifyContent: \"flex-end\",\n    my: \"40px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, jsx(Button, {\n    text: \"Previous\",\n    onClick: function onClick() {},\n    color: theme.colors.text,\n    mr: \"25px\",\n    backgroundColor: \"transparent\",\n    icon: jsx(Icon, {\n      icon: \"arrow-left\",\n      size: \"14px\",\n      mr: \"15px\",\n      color: theme.colors.dividerColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), jsx(Button, {\n    text: \"Next\",\n    onClick: function onClick() {\n      return setStepTwoComplete();\n    },\n    backgroundColor: theme.colors.primaryAccent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(StepTwo, \"I1Kx30ule6CbuKeZFa0BW6XiDsg=\", false, function () {\n  return [useKeyboardForm, useThemer];\n});\n\n_c = StepTwo;\nexport default StepTwo;\n\nvar gridify = function gridify(theme) {\n  return css(_templateObject(), theme.colors.primaryAccent);\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"sources":["/Users/rsbear/projects/typefeel/web/components/KeyboardFormSteps/StepTwo.tsx"],"names":["useKeyboardForm","Flex","BorderBox","Sans","Grid","Button","Icon","useThemer","Input","jsx","css","StepTwo","setStepTwoComplete","values","setBoolean","setString","setObjArray","theme","colors","dividerColor","gridify","connection","e","primaryAccent","support","extraPlates","text"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,eAAT,QAAgC,6BAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,IAA9C,QAA0D,eAA1D;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;;AAeA,IAAMC,OAAc,GAAG,SAAjBA,OAAiB,OAA4B;AAAA;;AAAA,MAAzBC,kBAAyB,QAAzBA,kBAAyB;;AAAA,yBACMZ,eAAe,EADrB;AAAA,MACzCa,MADyC,oBACzCA,MADyC;AAAA,MACjCC,UADiC,oBACjCA,UADiC;AAAA,MACrBC,SADqB,oBACrBA,SADqB;AAAA,MACVC,WADU,oBACVA,WADU;;AAEjD,MAAMC,KAAK,GAAGV,SAAS,EAAvB;AAEA,SACE,0BACE,IAAC,SAAD;AACE,IAAA,CAAC,EAAC,WADJ;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,MAAM,sBAAeU,KAAK,CAACC,MAAN,CAAaC,YAA5B,CAHR;AAIE,IAAA,YAAY,EAAC,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,IAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EASE,IAAC,IAAD;AAAM,IAAA,GAAG,EAAE;AAAA,aAAMC,OAAO,CAACH,KAAD,CAAb;AAAA,KAAX;AAAiC,IAAA,SAAS,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,KAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,2BAFd;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACQ,UAJhB;AAKE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOP,SAAS,CAACO,CAAD,CAAhB;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,IAAC,MAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,KAAK,EAAEL,KAAK,CAACC,MAAN,CAAaK,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CATF,CADF,EA4BE,IAAC,SAAD;AACE,IAAA,CAAC,EAAC,WADJ;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,MAAM,sBAAeN,KAAK,CAACC,MAAN,CAAaC,YAA5B,CAHR;AAIE,IAAA,YAAY,EAAC,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,IAAC,IAAD;AAAM,IAAA,UAAU,EAAE,GAAlB;AAAuB,IAAA,QAAQ,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EASE,IAAC,IAAD;AAAM,IAAA,GAAG,EAAE;AAAA,aAAMC,OAAO,CAACH,KAAD,CAAb;AAAA,KAAX;AAAiC,IAAA,SAAS,EAAE,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,KAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACW,OAJhB;AAKE,IAAA,QAAQ,EAAE,kBAACF,CAAD;AAAA,aAAOP,SAAS,CAACO,CAAD,CAAhB;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,IAAC,MAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,KAAK,EAAEL,KAAK,CAACC,MAAN,CAAaK,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CATF,CA5BF,EAuDE,IAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,IAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,OAAO,EAAE,iBAACD,CAAD;AAAA,aAAOR,UAAU,CAACQ,CAAD,CAAjB;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAACT,MAAM,CAACY,WAAR,GAAsB,KAAtB,GAA8B,sBANjC,CADF,EASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,KAAK,EAAE,IAHT;AAIE,IAAA,OAAO,EAAE,iBAACH,CAAD;AAAA,aAAOR,UAAU,CAACQ,CAAD,CAAjB;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAACT,MAAM,CAACY,WAAR,GAAsB,eAAtB,GAAwC,IAN3C,CATF,CAFF,CAvDF,EA6EE,IAAC,IAAD;AAAM,IAAA,cAAc,EAAC,UAArB;AAAgC,IAAA,EAAE,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAGE,IAAA,KAAK,EAAER,KAAK,CAACC,MAAN,CAAaQ,IAHtB;AAIE,IAAA,EAAE,EAAC,MAJL;AAKE,IAAA,eAAe,EAAC,aALlB;AAME,IAAA,IAAI,EACF,IAAC,IAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,KAAK,EAAET,KAAK,CAACC,MAAN,CAAaC,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBE,IAAC,MAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMP,kBAAkB,EAAxB;AAAA,KAFX;AAGE,IAAA,eAAe,EAAEK,KAAK,CAACC,MAAN,CAAaK,aAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CA7EF,CADF;AAsGD,CA1GD;;GAAMZ,O;UACmDX,e,EACzCO,S;;;KAFVI,O;AA4GN,eAAeA,OAAf;;AAEA,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAACH,KAAD;AAAA,SAAmBP,GAAnB,oBAKIO,KAAK,CAACC,MAAN,CAAaK,aALjB;AAAA,CAAhB","sourcesContent":["import { FC } from \"react\";\nimport { useKeyboardForm } from \"../../lib/keyboardFormStore\";\nimport { Flex, BorderBox, Sans, Grid, Button, Icon } from \"@rsbear/betsy\";\nimport { useThemer } from \"../../hooks/useThemer\";\nimport { Input } from \"../UI/Input\";\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport { ITheme } from \"../../lib/types\";\n\n// extraPcbs: boolean;\n// extraPlates: boolean;\n// layouts: string[] | null;\n// switchSupport?: string[] | null;\n// editions: string[] | null;\n// cases: ICase[];\n// plates: IPlate[];\n\ninterface P {\n  setStepTwoComplete: Function;\n}\n\nconst StepTwo: FC<P> = ({ setStepTwoComplete }) => {\n  const { values, setBoolean, setString, setObjArray } = useKeyboardForm();\n  const theme = useThemer();\n\n  return (\n    <>\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Layouts\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Layout e.g. WKL, WK, HHKB\"\n            name=\"layouts\"\n            value={values.connection}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <BorderBox\n        p=\"10px 20px\"\n        my=\"20px\"\n        border={`solid 1px ${theme.colors.dividerColor}`}\n        borderRadius=\"4px\"\n      >\n        <Sans fontWeight={600} fontSize=\"14px\">\n          Support\n        </Sans>\n        <Grid css={() => gridify(theme)} columnGap={15}>\n          <Input\n            icon=\"at-sign\"\n            placeholder=\"Support e.g. ANSI, ISO\"\n            name=\"support\"\n            value={values.support}\n            onChange={(e) => setString(e)}\n          />\n          <Button\n            text=\"Add another\"\n            onClick={() => {}}\n            variant=\"secondary\"\n            height=\"36px\"\n            color={theme.colors.primaryAccent}\n          />\n        </Grid>\n      </BorderBox>\n\n      <Flex justifyContent=\"space-between\">\n        <Sans fontSize=\"16px\">Will extra plates be available?</Sans>\n        <Flex>\n          <button\n            type=\"button\"\n            name=\"extraPlates\"\n            value={1}\n            onClick={(e) => setBoolean(e)}\n          >\n            {!values.extraPlates ? \"yes\" : \"yes already selected\"}\n          </button>\n          <button\n            type=\"button\"\n            name=\"extraPlates\"\n            value={null}\n            onClick={(e) => setBoolean(e)}\n          >\n            {!values.extraPlates ? \"no - selected\" : \"no\"}\n          </button>\n        </Flex>\n      </Flex>\n\n      <Flex justifyContent=\"flex-end\" my=\"40px\">\n        <Button\n          text=\"Previous\"\n          onClick={() => {}}\n          color={theme.colors.text}\n          mr=\"25px\"\n          backgroundColor=\"transparent\"\n          icon={\n            <Icon\n              icon=\"arrow-left\"\n              size=\"14px\"\n              mr=\"15px\"\n              color={theme.colors.dividerColor}\n            />\n          }\n        />\n        <Button\n          text=\"Next\"\n          onClick={() => setStepTwoComplete()}\n          backgroundColor={theme.colors.primaryAccent}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default StepTwo;\n\nconst gridify = (theme: ITheme) => css`\n  grid-template-columns: 1fr 140px;\n  grid-column-gap: 15px;\n\n  button {\n    border-color: ${theme.colors.primaryAccent};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}