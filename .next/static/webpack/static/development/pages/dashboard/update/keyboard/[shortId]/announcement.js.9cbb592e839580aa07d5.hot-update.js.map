{"version":3,"file":"static/webpack/static/development/pages/dashboard/update/keyboard/[shortId]/announcement.js.9cbb592e839580aa07d5.hot-update.js","sources":["webpack:///./pages/dashboard/update/keyboard/[shortId]/announcement.tsx","webpack:///./styles/buttons.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\nimport { text } from \"styles/text\";\nimport { GetProps } from \"interfaces/GetProps\";\nimport { useKeyboardQuery } from \"generated/graphql\";\nimport { Formik } from \"formik\";\nimport { FormikInput, FormikArea } from \"styles/inputs\";\nimport { Button } from \"styles/buttons\";\n\nconst KeyboardMessage: GetProps<any> = ({ authUser, shortId }) => {\n  const { loading, error, data } = useKeyboardQuery({ variables: { shortId } });\n  const kb = !loading && data && data.keyboard;\n  return (\n    <Layout title=\"Announcement\" authUser={authUser}>\n      {loading && <h2>Loading...</h2>}\n      {error && <h2>Oops, an error occured</h2>}\n      {!loading && data && data.keyboard && (\n        <>\n          <h1 css={text.heading}>{kb.name} announcement</h1>\n          <h4>\n            Create an announcement about changes or updates to your project\n          </h4>\n          <Formik initialValues={{ message: \"\" }} onSubmit={() => {}}>\n            {({ values }) => (\n              <form onSubmit={() => {}}>\n                <FormikArea\n                  icon=\"icon ion-ios-information-circle\"\n                  margins=\"0 0 10px 0\"\n                  type=\"text\"\n                  placeholder=\"Annoucement message\"\n                  name=\"message\"\n                />\n                <Button primary=\"submit\" type=\"button\">\n                  Post announcement\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nKeyboardMessage.getInitialProps = async (context: any) => {\n  const { shortId } = context.query;\n  return { shortId };\n};\n\nexport default KeyboardMessage;\n","import React, { FC } from \"react\";\nimport { jsx, css } from \"@emotion/core\";\nimport { colors } from \"./main\";\nimport { fontSize } from \"./text\";\n\nexport const btn = css`\n  width: 100%;\n  height: 36px;\n  outline: none;\n  border: solid 1px ${colors.black70};\n  border-radius: 4px;\n  background-color: ${colors.black70};\n  font-size: ${fontSize.small};\n  color: ${colors.white};\n  transition: all 200ms ease;\n`;\nexport const btnSmall = css`\n  width: auto;\n  margin-right: auto;\n  height: 24px;\n  outline: none;\n  border: solid 1px ${colors.black05};\n  border-radius: 4px;\n  background-color: ${colors.black05};\n  font-size: 12px;\n  color: ${colors.black70};\n`;\nconst secondary = css`\n  border: solid 1px ${colors.black30};\n  background-color: transparent;\n  color: ${colors.black70};\n\n  &:hover {\n    background-color: ${colors.black70};\n    color: ${colors.white};\n  }\n\n  &.active {\n    background-color: ${colors.black70};\n    color: ${colors.white};\n  }\n`;\n\nconst deleteIcon = css`\n  font-size: 18px;\n`;\n\nconst trashButton = css`\n  height: 36px;\n  width: 36px;\n  margin-left: 15px;\n  border-radius: 4px;\n  border: solid 1px red;\n  background: red;\n  color: white;\n`;\n\nexport const DeleteButton = props => (\n  <button css={trashButton} {...props}>\n    <i className={props.icon} css={deleteIcon} />\n  </button>\n);\n\nexport const Button: FC<any> = (props: any) => {\n  /* console.log(props); */\n  if (props.primary) {\n    return (\n      <>\n        <button\n          {...props}\n          css={[\n            btn,\n            css`\n              margin: ${props.margin};\n            `\n          ]}\n        >\n          {props.children}\n        </button>\n      </>\n    );\n  }\n  if (props.secondary) {\n    return (\n      <>\n        <button\n          {...props}\n          css={[\n            btn,\n            secondary,\n            css`\n              margin: ${props.margin};\n            `\n          ]}\n        >\n          {props.children}\n        </button>\n      </>\n    );\n  }\n  if (props.small) {\n    return (\n      <>\n        <button\n          {...props}\n          css={[\n            btnSmall,\n            css`\n              margin: ${props.margin};\n            `\n          ]}\n        >\n          {props.children}\n        </button>\n      </>\n    );\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAmBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAWA;AAAA;AACA;AADA;AAAA;AAWA;AAAA;AACA;AADA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;;;;A","sourceRoot":""}