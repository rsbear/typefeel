{"version":3,"file":"static/webpack/static/development/pages/dashboard/update/keyboard/[shortId]/announcement.js.044be2179612e3238c10.hot-update.js","sources":["webpack:///./pages/dashboard/update/keyboard/[shortId]/announcement.tsx","webpack:///./styles/inputs.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\nimport { text } from \"styles/text\";\nimport { GetProps } from \"interfaces/GetProps\";\nimport { useKeyboardQuery } from \"generated/graphql\";\nimport { Formik } from \"formik\";\nimport { FormikInput, FormikArea } from \"styles/inputs\";\n\nconst KeyboardMessage: GetProps<any> = ({ authUser, shortId }) => {\n  const { loading, error, data } = useKeyboardQuery({ variables: { shortId } });\n  const kb = !loading && data && data.keyboard;\n  return (\n    <Layout title=\"Announcement\" authUser={authUser}>\n      {loading && <h2>Loading...</h2>}\n      {error && <h2>Oops, an error occured</h2>}\n      {!loading && data && data.keyboard && (\n        <>\n          <h1 css={text.heading}>{kb.name} announcement</h1>\n          <h4>\n            Create an announcement about changes or updates to your project\n          </h4>\n          <Formik initialValues={{ message: \"\" }} onSubmit={() => {}}>\n            {({ values }) => (\n              <form onSubmit={() => {}}>\n                <FormikArea\n                  icon=\"icon ion-ios-information-circle\"\n                  margins=\"0 0 10px 0\"\n                  type=\"text\"\n                  placeholder=\"Annoucement message\"\n                  name=\"message\"\n                />\n              </form>\n            )}\n          </Formik>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nKeyboardMessage.getInitialProps = async (context: any) => {\n  const { shortId } = context.query;\n  return { shortId };\n};\n\nexport default KeyboardMessage;\n","import { jsx, css } from \"@emotion/core\";\nimport { colors, margins } from \"./main\";\nimport { FC } from \"react\";\nimport { Field } from \"formik\";\n\nexport const inputBox = css`\n  position: relative;\n  height: 36px;\n  border: solid 1px ${colors.black20};\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  i {\n    margin: 0 15px;\n  }\n\n  input {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    font-size: 13px;\n    padding-left: 40px;\n    outline: none;\n    border: none;\n    background-color: transparent;\n  }\n\n  &:focus-within {\n    box-shadow: 0px 0px 0px 2px rgba(20, 240, 160, 0.5);\n    border: solid 1px rgba(20, 240, 160, 0.5);\n  }\n`;\n\nexport const Input: FC<any> = (props: any) => {\n  return (\n    <div css={[inputBox, margins(props.margins)]}>\n      <i className={props.icon} />\n      <input {...props} />\n    </div>\n  );\n};\n\nexport const FormikInput: FC<any> = (props: any) => {\n  return (\n    <div css={[inputBox, margins(props.margins)]}>\n      <i className={props.icon} />\n      <Field {...props} />\n    </div>\n  );\n};\n\nconst textArea = css`\n  position: relative;\n  min-height: 96px;\n  height: auto;\n  width: 100%;\n  padding: 1px;\n  border-radius: 4px;\n  border: solid 1px ${colors.black20};\n\n  textarea {\n    resize: none;\n    padding: 15px;\n    height: 100%;\n    width: 100%;\n    border: 0;\n\n    &:focus {\n      outline: none;\n      border: 0;\n    }\n  }\n\n  &:focus-within {\n    box-shadow: 0px 0px 0px 2px rgba(20, 240, 160, 0.5);\n    border: solid 1px rgba(20, 240, 160, 0.5);\n  }\n`;\n\nexport const TextArea: FC<any> = (props: any) => (\n  <div css={[textArea, margins(props.margins)]}>\n    <textarea placeholder=\"Be descriptive\" {...props}></textarea>\n  </div>\n);\n\nexport const FormikArea: FC<any> = (props: any) => (\n  <div css={[textArea, margins(props.margins)]}>\n    <Field as=\"textarea\" {...props}></Field>\n  </div>\n);\n\nconst chatBox = css`\n  position: relative;\n  min-height: 96px;\n  height: auto;\n  width: 100%;\n  padding: 1px;\n  border-radius: 4px;\n  border: solid 1px ${colors.black20};\n\n  textarea {\n    resize: none;\n    padding: 15px;\n    height: 100%;\n    width: 100%;\n    border: 0;\n\n    &:focus {\n      outline: none;\n      border: 0;\n    }\n  }\n\n  &:focus-within {\n    box-shadow: 0px 0px 0px 2px rgba(20, 240, 160, 0.5);\n    border: solid 1px rgba(20, 240, 160, 0.5);\n  }\n`;\n\nexport const ReplyBox: FC<any> = (props: any) => (\n  <div css={[chatBox, margins(props.margins)]}>\n    <textarea {...props} />\n  </div>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAgBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAgCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AADA;AAAA;AA4BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AACA;AADA;AAAA;AA4BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;A","sourceRoot":""}