{"version":3,"file":"static/development/pages/keyboards.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Tile.tsx","webpack:///./components/layouts/DynamicNav.tsx","webpack:///./components/layouts/Footer.tsx","webpack:///./components/layouts/Header.tsx","webpack:///./components/layouts/Layout.tsx","webpack:///./components/layouts/Navigation.tsx","webpack:///./generated/graphql.tsx","webpack:///./node_modules/@babel/runtime-corejs2/core-js/map.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/dist/client/router.js","webpack:///./node_modules/next/dist/client/with-router.js","webpack:///./node_modules/next/dist/next-server/lib/mitt.js","webpack:///./node_modules/next/dist/next-server/lib/router-context.js","webpack:///./node_modules/next/dist/next-server/lib/router/rewrite-url-for-export.js","webpack:///./node_modules/next/dist/next-server/lib/router/router.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js","webpack:///./node_modules/next/dist/next-server/lib/utils.js","webpack:///./node_modules/next/link.js","webpack:///./node_modules/next/node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/next/node_modules/react-is/index.js","webpack:///./pages/keyboards/index.tsx","webpack:///./styles/main.ts","webpack:///./styles/text.ts","webpack:///external \"@apollo/react-hooks\"","webpack:///external \"@emotion/core\"","webpack:///external \"@emotion/css\"","webpack:///external \"core-js/library/fn/map\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, { FC } from \"react\";\nimport css from \"@emotion/css\";\nimport { text } from \"styles/text\";\nimport { colors } from \"styles/main\";\n\ninterface Props {\n  image?: string;\n  name?: string;\n  mount?: string;\n  size?: string;\n  profile?: string;\n}\n\nconst Tile: FC<Props> = ({ image, name, size, mount, profile }) => {\n  return (\n    <div css={wrapper}>\n      <div className=\"outer\">\n        <div className=\"inner\">\n          <img src={image} alt={name} />\n        </div>\n      </div>\n      <h4>{name}</h4>\n      <p css={secondline}>{size}</p>\n    </div>\n  );\n};\n\nexport default Tile;\n\nconst wrapper = css`\n  & .outer {\n    position: relative;\n    &:before {\n      content: \"\";\n      display: block;\n      width: 100%;\n      height: 440px;\n      padding-top: (1/1) * 100%;\n    }\n    > .inner {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: ${colors.black10};\n      & img {\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n        object-position: center;\n      }\n    }\n  }\n\n  h4 {\n    margin: 10px 0 3px 0;\n  }\n`;\n\nconst secondline = css`\n  color: ${colors.black50};\n`;\n","import React, { FC } from \"react\";\nimport css from \"@emotion/css\";\nimport { colors, flex } from \"styles/main\";\nimport { fontSize } from \"styles/text\";\nimport Link from \"next/link\";\n\ninterface Props {\n  dynamicNav?: {\n    name?: string;\n    discussionHref?: string;\n    discussionAs?: string;\n    dataHref?: string;\n    dataAs?: string;\n  };\n}\n\nconst DynamicNav: FC<Props> = ({ dynamicNav }) => {\n  if (!dynamicNav) {\n    return null;\n  }\n\n  return (\n    <div css={[flex.column, wrap]}>\n      <h4>{dynamicNav.name}</h4>\n      <p css={ppp}>\n        <Link href={dynamicNav.discussionHref} as={dynamicNav.discussionAs}>\n          <a>Discussion</a>\n        </Link>\n      </p>\n      <p css={ppp}>\n        <Link href={dynamicNav.dataHref} as={dynamicNav.dataAs}>\n          <a>Data</a>\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default DynamicNav;\n\nconst wrap = css`\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: solid 1px ${colors.black10};\n`;\n\nconst ppp = css`\n  margin: 10px 0;\n  margin-top: 0;\n  font-size: ${fontSize.small};\n`;\n","import React, { FC } from \"react\";\nimport Link from \"next/link\";\nimport css from \"@emotion/css\";\nimport { colors } from \"styles/main\";\n\nconst Footer: FC<any> = () => {\n  return (\n    <footer css={foot}>\n      <ul>\n        <li>FAQ</li>\n        <li>privacy</li>\n        <li>terms & agreement</li>\n        <li>idk what im doing</li>\n      </ul>\n    </footer>\n  );\n};\n\nexport default Footer;\n\nconst foot = css`\n  margin-top: 100px;\n  padding: 40px 0;\n\n  ul {\n    display: flex;\n    justify-content: space-between;\n    padding-top: 20px;\n    border-top: solid 1px ${colors.black10};\n\n    li {\n      font-size: 0.75rem;\n      color: ${colors.black60};\n    }\n  }\n`;\n","import React, { FC } from \"react\";\nimport Head from \"next/head\";\n\ninterface Props {\n  title?: string;\n}\n\nconst Header: FC<Props> = ({ title }) => (\n  <Head>\n    <title>{title} - TypeFeel</title>\n    <meta charSet=\"utf-8\" />\n    <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n    <link\n      href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\"\n      rel=\"stylesheet\"\n    />\n  </Head>\n);\nexport default Header;\n","import React, { FC } from \"react\";\nimport Header from \"components/layouts/Header\";\nimport Navigation from \"./Navigation\";\nimport { flex, margins } from \"styles/main\";\nimport css from \"@emotion/css\";\nimport Footer from \"./Footer\";\n\nconst Layout: FC<any> = ({ title, children, authUser, dynamicNav }) => (\n  <div css={[flex.row, margins(\"0 auto\")]}>\n    <Header title={title} />\n    <Navigation authUser={authUser} dynamicNav={dynamicNav} />\n    <main css={mainContent}>\n      <>{children}</>\n      <Footer />\n    </main>\n  </div>\n);\n\nexport default Layout;\n\nconst wrapper = css``;\n\nconst mainContent = css`\n  padding-top: 50px;\n  width: 900px;\n`;\n","import React, { FC } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport DynamicNav from \"./DynamicNav\";\n\nimport css from \"@emotion/css\";\nimport { colors } from \"styles/main\";\nimport { fontSize } from \"styles/text\";\n\nconst Navigation: FC<any> = ({ authUser, dynamicNav }) => {\n  const router = useRouter();\n\n  const keyboardPaths = router.pathname.includes(\"/keyboard\");\n  const keysetPaths = router.pathname.includes(\"/keyset\");\n\n  return (\n    <nav css={navStyle}>\n      <ul>\n        <h4>\n          <Link href=\"/\">\n            <a>typefeel</a>\n          </Link>\n        </h4>\n        <li>\n          <Link href=\"/keyboards\">\n            <a>Keyboards</a>\n          </Link>\n        </li>\n        {keyboardPaths && (\n          <>\n            <li className=\"subRoute\">\n              <Link href=\"/keyboards/interestchecks\">\n                <a>Interest checks</a>\n              </Link>\n            </li>\n            <li className=\"subRoute\">\n              <Link href=\"/keyboards/catalog\">\n                <a>Catalog</a>\n              </Link>\n            </li>\n          </>\n        )}\n        <li>\n          <Link href=\"/keysets\">\n            <a>Keysets</a>\n          </Link>\n        </li>\n        {keysetPaths && (\n          <>\n            <li className=\"subRoute\">\n              <Link href=\"/keysets/interestchecks\">\n                <a>Interest checks</a>\n              </Link>\n            </li>\n            <li className=\"subRoute\">\n              <Link href=\"/keysets/catalog\">\n                <a>Catalog</a>\n              </Link>\n            </li>\n          </>\n        )}\n        <li>Artisans</li>\n        <li>\n          <Link href=\"/create\">\n            <a>Create</a>\n          </Link>\n        </li>\n        {!authUser ? (\n          <li>\n            <Link href=\"/login\">\n              <a>Log in</a>\n            </Link>\n            <span>&nbsp;/&nbsp;</span>\n            <Link href=\"/signup\">\n              <a>Sign up</a>\n            </Link>\n          </li>\n        ) : (\n          <li>\n            <Link href=\"/dashboard\">\n              <a>Dashboard</a>\n            </Link>\n          </li>\n        )}\n        <DynamicNav dynamicNav={dynamicNav} />\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n\nconst navStyle = css`\n  position: relative;\n  height: 100vh;\n  width: 140px;\n  margin-right: 40px;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n\n  ul {\n    position: sticky;\n    top: 40px;\n\n    h4 {\n      font-style: italic;\n      margin-bottom: 20px;\n    }\n\n    li {\n      padding: 8px 0;\n      margin: 2px 0;\n      font-size: ${fontSize.small};\n      color: ${colors.black60};\n\n      &.subRoute {\n        font-size: 13px;\n        padding-left: 10px;\n        border-left: solid 1px ${colors.black05};\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any,\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any,\n};\n\nexport type Auth = {\n   __typename?: 'Auth',\n  id: Scalars['String'],\n  email: Scalars['String'],\n  token: Scalars['String'],\n  secret: Scalars['String'],\n  created: Scalars['DateTime'],\n};\n\nexport type Color = {\n   __typename?: 'Color',\n  id: Scalars['String'],\n  hex?: Maybe<Scalars['String']>,\n  ral?: Maybe<Scalars['String']>,\n};\n\nexport type ColorInput = {\n  hex?: Maybe<Scalars['String']>,\n  ral?: Maybe<Scalars['String']>,\n};\n\n\nexport type Edition = {\n   __typename?: 'Edition',\n  id: Scalars['String'],\n  shortId: Scalars['String'],\n  name?: Maybe<Scalars['String']>,\n  price?: Maybe<Scalars['Int']>,\n  suggestedPrice?: Maybe<Scalars['Int']>,\n  cases?: Maybe<Array<Scalars['String']>>,\n  colors?: Maybe<Array<Scalars['String']>>,\n  plates?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type EditionInput = {\n  id?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  price?: Maybe<Scalars['Int']>,\n  suggestedPrice?: Maybe<Scalars['Int']>,\n  cases?: Maybe<Array<Scalars['String']>>,\n  colors?: Maybe<Array<Scalars['String']>>,\n  plates?: Maybe<Array<Scalars['String']>>,\n};\n\nexport type Follow = {\n   __typename?: 'Follow',\n  id: Scalars['String'],\n  keyboardId?: Maybe<Scalars['String']>,\n  keysetId?: Maybe<Scalars['String']>,\n  keyboard: Keyboard,\n};\n\nexport type FollowInput = {\n  keyboardId?: Maybe<Scalars['String']>,\n  keysetId?: Maybe<Scalars['String']>,\n};\n\nexport type JoinKeyboard = {\n   __typename?: 'JoinKeyboard',\n  id: Scalars['String'],\n  keyboardId: Scalars['String'],\n  caseChoice: Scalars['String'],\n  plateChoice: Scalars['String'],\n  layoutChoice: Scalars['String'],\n  created: Scalars['DateTime'],\n  keyboard?: Maybe<Keyboard>,\n  user?: Maybe<User>,\n};\n\nexport type JoinKeyboardInput = {\n  caseChoice: Scalars['String'],\n  plateChoice: Scalars['String'],\n  layoutChoice: Scalars['String'],\n};\n\nexport type Keyboard = {\n   __typename?: 'Keyboard',\n  angle?: Maybe<Scalars['String']>,\n  announcement?: Maybe<Scalars['String']>,\n  brand?: Maybe<Scalars['String']>,\n  connector?: Maybe<Scalars['String']>,\n  details?: Maybe<Array<Scalars['String']>>,\n  editions?: Maybe<Array<Edition>>,\n  firmware?: Maybe<Scalars['String']>,\n  mount?: Maybe<Scalars['String']>,\n  layouts?: Maybe<Array<Scalars['String']>>,\n  pcb?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  size?: Maybe<Scalars['String']>,\n  support?: Maybe<Array<Scalars['String']>>,\n  id: Scalars['String'],\n  shortId: Scalars['String'],\n  images600?: Maybe<Array<Scalars['String']>>,\n  images800?: Maybe<Array<Scalars['String']>>,\n  images1500?: Maybe<Array<Scalars['String']>>,\n  imagesRaw?: Maybe<Array<Scalars['String']>>,\n  created: Scalars['DateTime'],\n  updated: Scalars['DateTime'],\n  maker?: Maybe<User>,\n  interestCheck?: Maybe<Scalars['Boolean']>,\n  market?: Maybe<Scalars['Boolean']>,\n  groupBuy?: Maybe<Scalars['Boolean']>,\n  groupBuySoon?: Maybe<Scalars['Boolean']>,\n  closed?: Maybe<Scalars['Boolean']>,\n  joins?: Maybe<Array<JoinKeyboard>>,\n  posts?: Maybe<Array<Post>>,\n};\n\nexport type KeyboardInput = {\n  angle?: Maybe<Scalars['String']>,\n  brand?: Maybe<Scalars['String']>,\n  connector?: Maybe<Scalars['String']>,\n  details?: Maybe<Array<Scalars['String']>>,\n  editions?: Maybe<Array<EditionInput>>,\n  firmware?: Maybe<Scalars['String']>,\n  mount?: Maybe<Scalars['String']>,\n  layouts?: Maybe<Array<Scalars['String']>>,\n  pcb?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  size?: Maybe<Scalars['String']>,\n  support?: Maybe<Array<Scalars['String']>>,\n  interestCheck?: Maybe<Scalars['Boolean']>,\n  groupBuy?: Maybe<Scalars['Boolean']>,\n  groupBuySoon?: Maybe<Scalars['Boolean']>,\n  market?: Maybe<Scalars['Boolean']>,\n  closed?: Maybe<Scalars['Boolean']>,\n};\n\nexport type Keyset = {\n   __typename?: 'Keyset',\n  id: Scalars['String'],\n  shortId: Scalars['String'],\n  name: Scalars['String'],\n  profile: Scalars['String'],\n  stem: Scalars['String'],\n  kits?: Maybe<Array<Kit>>,\n  colors?: Maybe<Array<Color>>,\n  images600?: Maybe<Array<Scalars['String']>>,\n  images800?: Maybe<Array<Scalars['String']>>,\n  images1500?: Maybe<Array<Scalars['String']>>,\n  imagesRaw?: Maybe<Array<Scalars['String']>>,\n  details?: Maybe<Array<Scalars['String']>>,\n  created: Scalars['DateTime'],\n  updated: Scalars['DateTime'],\n  maker?: Maybe<User>,\n};\n\nexport type KeysetInput = {\n  name: Scalars['String'],\n  profile: Scalars['String'],\n  stem: Scalars['String'],\n  kits: Array<KitInput>,\n  colors: Array<ColorInput>,\n  details: Array<Scalars['String']>,\n};\n\nexport type Kit = {\n   __typename?: 'Kit',\n  id: Scalars['String'],\n  shortId: Scalars['String'],\n  kit?: Maybe<Scalars['String']>,\n  price?: Maybe<Scalars['Int']>,\n  suggestedPrice?: Maybe<Scalars['Int']>,\n  name?: Maybe<Scalars['String']>,\n};\n\nexport type KitInput = {\n  kit?: Maybe<Scalars['String']>,\n  name?: Maybe<Scalars['String']>,\n  price: Scalars['Int'],\n  suggestedPrice: Scalars['Int'],\n};\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  accessToken: Scalars['String'],\n  user: User,\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  logout: Scalars['Boolean'],\n  revokeRefreshTokensForUser: Scalars['Boolean'],\n  login: LoginResponse,\n  signup: Scalars['Boolean'],\n  banUser: Scalars['Boolean'],\n  generateAuth: Scalars['Boolean'],\n  deleteAuth: Scalars['Boolean'],\n  makeKeyboard: Scalars['Boolean'],\n  updateKeyboardStage: Scalars['Boolean'],\n  updateKeyboard: Scalars['Boolean'],\n  keyboardAnnouncement: Scalars['Boolean'],\n  deleteKeyboard: Scalars['Boolean'],\n  makeKeyset: Scalars['Boolean'],\n  deleteKeyset: Scalars['Boolean'],\n  deleteEdition: Scalars['Boolean'],\n  voteKeyboardUp: Scalars['Boolean'],\n  voteKeyboardDown: Scalars['Boolean'],\n  deleteVote: Scalars['Boolean'],\n  joinKeyboard: Scalars['Boolean'],\n  deleteJoin: Scalars['Boolean'],\n  createPost: Scalars['Boolean'],\n  deletePost: Scalars['Boolean'],\n  followKeyboard: Scalars['Boolean'],\n  followKeyboardDelete: Scalars['Boolean'],\n  deleteFollow: Scalars['Boolean'],\n};\n\n\nexport type MutationRevokeRefreshTokensForUserArgs = {\n  userId: Scalars['String']\n};\n\n\nexport type MutationLoginArgs = {\n  secret: Scalars['String'],\n  email: Scalars['String']\n};\n\n\nexport type MutationSignupArgs = {\n  username: Scalars['String'],\n  email: Scalars['String'],\n  secret: Scalars['String']\n};\n\n\nexport type MutationBanUserArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationGenerateAuthArgs = {\n  email: Scalars['String']\n};\n\n\nexport type MutationDeleteAuthArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationMakeKeyboardArgs = {\n  images: Array<Scalars['Upload']>,\n  data: KeyboardInput\n};\n\n\nexport type MutationUpdateKeyboardStageArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationUpdateKeyboardArgs = {\n  data: KeyboardInput,\n  id: Scalars['String']\n};\n\n\nexport type MutationKeyboardAnnouncementArgs = {\n  announcement: Scalars['String'],\n  id: Scalars['String']\n};\n\n\nexport type MutationDeleteKeyboardArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationMakeKeysetArgs = {\n  images: Array<Scalars['Upload']>,\n  data: KeysetInput\n};\n\n\nexport type MutationDeleteKeysetArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationDeleteEditionArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationVoteKeyboardUpArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationVoteKeyboardDownArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationDeleteVoteArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationJoinKeyboardArgs = {\n  data: JoinKeyboardInput,\n  id: Scalars['String']\n};\n\n\nexport type MutationDeleteJoinArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationCreatePostArgs = {\n  body: Scalars['String'],\n  id: Scalars['String']\n};\n\n\nexport type MutationDeletePostArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationFollowKeyboardArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationFollowKeyboardDeleteArgs = {\n  id: Scalars['String']\n};\n\n\nexport type MutationDeleteFollowArgs = {\n  id: Scalars['String']\n};\n\nexport type Post = {\n   __typename?: 'Post',\n  id: Scalars['String'],\n  body: Scalars['String'],\n  created: Scalars['DateTime'],\n  user: User,\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  bye: Scalars['String'],\n  users: Array<User>,\n  me?: Maybe<User>,\n  auths: Array<Auth>,\n  keyboards: Array<Keyboard>,\n  keyboard: Keyboard,\n  sortKeyboards: Array<Keyboard>,\n  keysets: Array<Keyset>,\n  keyset: Keyset,\n  sortKeysets: Array<Keyset>,\n  editions: Array<Edition>,\n  votes: Array<Vote>,\n  joinss: Array<JoinKeyboard>,\n  postss: Array<Post>,\n  follows: Array<Follow>,\n};\n\n\nexport type QueryKeyboardArgs = {\n  shortId: Scalars['String']\n};\n\n\nexport type QuerySortKeyboardsArgs = {\n  where: SearchInput\n};\n\n\nexport type QueryKeysetArgs = {\n  shortId: Scalars['String']\n};\n\n\nexport type QuerySortKeysetsArgs = {\n  where: SearchInput\n};\n\nexport type SearchInput = {\n  interestCheck?: Maybe<Scalars['Boolean']>,\n  market?: Maybe<Scalars['Boolean']>,\n  groupBuy?: Maybe<Scalars['Boolean']>,\n};\n\n\nexport type User = {\n   __typename?: 'User',\n  id: Scalars['String'],\n  email: Scalars['String'],\n  username: Scalars['String'],\n  keyboards: Array<Keyboard>,\n  votes: Array<Vote>,\n  follows: Array<Follow>,\n  keyboardjoins: Array<JoinKeyboard>,\n};\n\nexport type Vote = {\n   __typename?: 'Vote',\n  id: Scalars['String'],\n  editionId: Scalars['String'],\n  created: Scalars['DateTime'],\n  expiration?: Maybe<Scalars['String']>,\n  user?: Maybe<User>,\n};\n\nexport type AuthsQueryVariables = {};\n\n\nexport type AuthsQuery = (\n  { __typename?: 'Query' }\n  & { auths: Array<(\n    { __typename?: 'Auth' }\n    & Pick<Auth, 'id' | 'secret' | 'email'>\n  )> }\n);\n\nexport type ByeQueryVariables = {};\n\n\nexport type ByeQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'bye'>\n);\n\nexport type CreatePostMutationVariables = {\n  id: Scalars['String'],\n  body: Scalars['String']\n};\n\n\nexport type CreatePostMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'createPost'>\n);\n\nexport type FollowKeyboardMutationVariables = {\n  id: Scalars['String']\n};\n\n\nexport type FollowKeyboardMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'followKeyboard'>\n);\n\nexport type FollowKeyboardDeleteMutationVariables = {\n  id: Scalars['String']\n};\n\n\nexport type FollowKeyboardDeleteMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'followKeyboardDelete'>\n);\n\nexport type GenerateAuthMutationVariables = {\n  email: Scalars['String']\n};\n\n\nexport type GenerateAuthMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'generateAuth'>\n);\n\nexport type JoinKeyboardMutationVariables = {\n  id: Scalars['String'],\n  data: JoinKeyboardInput\n};\n\n\nexport type JoinKeyboardMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'joinKeyboard'>\n);\n\nexport type KeyboardQueryVariables = {\n  shortId: Scalars['String']\n};\n\n\nexport type KeyboardQuery = (\n  { __typename?: 'Query' }\n  & { keyboard: (\n    { __typename?: 'Keyboard' }\n    & Pick<Keyboard, 'angle' | 'announcement' | 'brand' | 'closed' | 'connector' | 'details' | 'firmware' | 'groupBuy' | 'groupBuySoon' | 'id' | 'images1500' | 'interestCheck' | 'layouts' | 'market' | 'mount' | 'name' | 'pcb' | 'shortId' | 'size' | 'support'>\n    & { editions: Maybe<Array<(\n      { __typename?: 'Edition' }\n      & Pick<Edition, 'id' | 'name' | 'price' | 'suggestedPrice' | 'cases' | 'plates'>\n    )>>, posts: Maybe<Array<(\n      { __typename?: 'Post' }\n      & Pick<Post, 'id' | 'body'>\n    )>> }\n  ) }\n);\n\nexport type KeyboardAnnouncementMutationVariables = {\n  id: Scalars['String'],\n  announcement: Scalars['String']\n};\n\n\nexport type KeyboardAnnouncementMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'keyboardAnnouncement'>\n);\n\nexport type KeyboardPostsQueryVariables = {\n  shortId: Scalars['String']\n};\n\n\nexport type KeyboardPostsQuery = (\n  { __typename?: 'Query' }\n  & { keyboard: (\n    { __typename?: 'Keyboard' }\n    & Pick<Keyboard, 'id' | 'shortId' | 'images600' | 'name'>\n    & { posts: Maybe<Array<(\n      { __typename?: 'Post' }\n      & Pick<Post, 'id' | 'body' | 'created'>\n      & { user: (\n        { __typename?: 'User' }\n        & Pick<User, 'username'>\n      ) }\n    )>> }\n  ) }\n);\n\nexport type KeyboardsQueryVariables = {};\n\n\nexport type KeyboardsQuery = (\n  { __typename?: 'Query' }\n  & { keyboards: Array<(\n    { __typename?: 'Keyboard' }\n    & Pick<Keyboard, 'id' | 'images600' | 'mount' | 'shortId' | 'size' | 'name'>\n  )> }\n);\n\nexport type KeysetQueryVariables = {\n  shortId: Scalars['String']\n};\n\n\nexport type KeysetQuery = (\n  { __typename?: 'Query' }\n  & { keyset: (\n    { __typename?: 'Keyset' }\n    & Pick<Keyset, 'created' | 'details' | 'id' | 'images1500' | 'name' | 'profile' | 'shortId' | 'stem'>\n    & { colors: Maybe<Array<(\n      { __typename?: 'Color' }\n      & Pick<Color, 'id' | 'hex' | 'ral'>\n    )>>, kits: Maybe<Array<(\n      { __typename?: 'Kit' }\n      & Pick<Kit, 'id' | 'kit' | 'name' | 'price'>\n    )>>, maker: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'username'>\n    )> }\n  ) }\n);\n\nexport type KeysetsQueryVariables = {};\n\n\nexport type KeysetsQuery = (\n  { __typename?: 'Query' }\n  & { keysets: Array<(\n    { __typename?: 'Keyset' }\n    & Pick<Keyset, 'id' | 'shortId' | 'name' | 'profile' | 'images600'>\n  )> }\n);\n\nexport type LoginMutationVariables = {\n  email: Scalars['String'],\n  secret: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken'>\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id'>\n    ) }\n  ) }\n);\n\nexport type MakeKeyboardMutationVariables = {\n  data: KeyboardInput,\n  images: Array<Scalars['Upload']>\n};\n\n\nexport type MakeKeyboardMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'makeKeyboard'>\n);\n\nexport type MakeKeysetMutationVariables = {\n  data: KeysetInput,\n  images: Array<Scalars['Upload']>\n};\n\n\nexport type MakeKeysetMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'makeKeyset'>\n);\n\nexport type MeQueryVariables = {};\n\n\nexport type MeQuery = (\n  { __typename?: 'Query' }\n  & { me: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'username'>\n    & { keyboardjoins: Array<(\n      { __typename?: 'JoinKeyboard' }\n      & Pick<JoinKeyboard, 'id'>\n    )>, follows: Array<(\n      { __typename?: 'Follow' }\n      & Pick<Follow, 'id'>\n      & { keyboard: (\n        { __typename?: 'Keyboard' }\n        & Pick<Keyboard, 'id'>\n      ) }\n    )> }\n  )> }\n);\n\nexport type SignupMutationVariables = {\n  username: Scalars['String'],\n  email: Scalars['String'],\n  secret: Scalars['String']\n};\n\n\nexport type SignupMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'signup'>\n);\n\nexport type SortKeyboardsQueryVariables = {\n  where: SearchInput\n};\n\n\nexport type SortKeyboardsQuery = (\n  { __typename?: 'Query' }\n  & { sortKeyboards: Array<(\n    { __typename?: 'Keyboard' }\n    & Pick<Keyboard, 'id' | 'shortId' | 'name' | 'mount' | 'size' | 'images600'>\n  )> }\n);\n\nexport type UpdateKeyboardMutationVariables = {\n  id: Scalars['String'],\n  data: KeyboardInput\n};\n\n\nexport type UpdateKeyboardMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'updateKeyboard'>\n);\n\nexport type UserDashboardQueryVariables = {};\n\n\nexport type UserDashboardQuery = (\n  { __typename?: 'Query' }\n  & { me: Maybe<(\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'username' | 'email'>\n    & { keyboards: Array<(\n      { __typename?: 'Keyboard' }\n      & Pick<Keyboard, 'id' | 'shortId' | 'name' | 'interestCheck' | 'groupBuy' | 'groupBuySoon' | 'closed'>\n      & { joins: Maybe<Array<(\n        { __typename?: 'JoinKeyboard' }\n        & Pick<JoinKeyboard, 'id'>\n      )>> }\n    )>, keyboardjoins: Array<(\n      { __typename?: 'JoinKeyboard' }\n      & Pick<JoinKeyboard, 'id'>\n      & { keyboard: Maybe<(\n        { __typename?: 'Keyboard' }\n        & Pick<Keyboard, 'shortId' | 'id' | 'name'>\n      )> }\n    )>, follows: Array<(\n      { __typename?: 'Follow' }\n      & Pick<Follow, 'id'>\n      & { keyboard: (\n        { __typename?: 'Keyboard' }\n        & Pick<Keyboard, 'id' | 'name' | 'size' | 'mount' | 'shortId'>\n      ) }\n    )> }\n  )> }\n);\n\nexport type VoteKeyboardDownMutationVariables = {\n  id: Scalars['String']\n};\n\n\nexport type VoteKeyboardDownMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'voteKeyboardDown'>\n);\n\nexport type VoteKeyboardUpMutationVariables = {\n  id: Scalars['String']\n};\n\n\nexport type VoteKeyboardUpMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'voteKeyboardUp'>\n);\n\n\nexport const AuthsDocument = gql`\n    query auths {\n  auths {\n    id\n    secret\n    email\n  }\n}\n    `;\n\n/**\n * __useAuthsQuery__\n *\n * To run a query within a React component, call `useAuthsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAuthsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAuthsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useAuthsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<AuthsQuery, AuthsQueryVariables>) {\n        return ApolloReactHooks.useQuery<AuthsQuery, AuthsQueryVariables>(AuthsDocument, baseOptions);\n      }\nexport function useAuthsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<AuthsQuery, AuthsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<AuthsQuery, AuthsQueryVariables>(AuthsDocument, baseOptions);\n        }\nexport type AuthsQueryHookResult = ReturnType<typeof useAuthsQuery>;\nexport type AuthsLazyQueryHookResult = ReturnType<typeof useAuthsLazyQuery>;\nexport type AuthsQueryResult = ApolloReactCommon.QueryResult<AuthsQuery, AuthsQueryVariables>;\nexport const ByeDocument = gql`\n    query bye {\n  bye\n}\n    `;\n\n/**\n * __useByeQuery__\n *\n * To run a query within a React component, call `useByeQuery` and pass it any options that fit your needs.\n * When your component renders, `useByeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useByeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useByeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<ByeQuery, ByeQueryVariables>) {\n        return ApolloReactHooks.useQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n      }\nexport function useByeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<ByeQuery, ByeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<ByeQuery, ByeQueryVariables>(ByeDocument, baseOptions);\n        }\nexport type ByeQueryHookResult = ReturnType<typeof useByeQuery>;\nexport type ByeLazyQueryHookResult = ReturnType<typeof useByeLazyQuery>;\nexport type ByeQueryResult = ApolloReactCommon.QueryResult<ByeQuery, ByeQueryVariables>;\nexport const CreatePostDocument = gql`\n    mutation createPost($id: String!, $body: String!) {\n  createPost(id: $id, body: $body)\n}\n    `;\nexport type CreatePostMutationFn = ApolloReactCommon.MutationFunction<CreatePostMutation, CreatePostMutationVariables>;\n\n/**\n * __useCreatePostMutation__\n *\n * To run a mutation, you first call `useCreatePostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreatePostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createPostMutation, { data, loading, error }] = useCreatePostMutation({\n *   variables: {\n *      id: // value for 'id'\n *      body: // value for 'body'\n *   },\n * });\n */\nexport function useCreatePostMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<CreatePostMutation, CreatePostMutationVariables>) {\n        return ApolloReactHooks.useMutation<CreatePostMutation, CreatePostMutationVariables>(CreatePostDocument, baseOptions);\n      }\nexport type CreatePostMutationHookResult = ReturnType<typeof useCreatePostMutation>;\nexport type CreatePostMutationResult = ApolloReactCommon.MutationResult<CreatePostMutation>;\nexport type CreatePostMutationOptions = ApolloReactCommon.BaseMutationOptions<CreatePostMutation, CreatePostMutationVariables>;\nexport const FollowKeyboardDocument = gql`\n    mutation followKeyboard($id: String!) {\n  followKeyboard(id: $id)\n}\n    `;\nexport type FollowKeyboardMutationFn = ApolloReactCommon.MutationFunction<FollowKeyboardMutation, FollowKeyboardMutationVariables>;\n\n/**\n * __useFollowKeyboardMutation__\n *\n * To run a mutation, you first call `useFollowKeyboardMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFollowKeyboardMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [followKeyboardMutation, { data, loading, error }] = useFollowKeyboardMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useFollowKeyboardMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<FollowKeyboardMutation, FollowKeyboardMutationVariables>) {\n        return ApolloReactHooks.useMutation<FollowKeyboardMutation, FollowKeyboardMutationVariables>(FollowKeyboardDocument, baseOptions);\n      }\nexport type FollowKeyboardMutationHookResult = ReturnType<typeof useFollowKeyboardMutation>;\nexport type FollowKeyboardMutationResult = ApolloReactCommon.MutationResult<FollowKeyboardMutation>;\nexport type FollowKeyboardMutationOptions = ApolloReactCommon.BaseMutationOptions<FollowKeyboardMutation, FollowKeyboardMutationVariables>;\nexport const FollowKeyboardDeleteDocument = gql`\n    mutation followKeyboardDelete($id: String!) {\n  followKeyboardDelete(id: $id)\n}\n    `;\nexport type FollowKeyboardDeleteMutationFn = ApolloReactCommon.MutationFunction<FollowKeyboardDeleteMutation, FollowKeyboardDeleteMutationVariables>;\n\n/**\n * __useFollowKeyboardDeleteMutation__\n *\n * To run a mutation, you first call `useFollowKeyboardDeleteMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFollowKeyboardDeleteMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [followKeyboardDeleteMutation, { data, loading, error }] = useFollowKeyboardDeleteMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useFollowKeyboardDeleteMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<FollowKeyboardDeleteMutation, FollowKeyboardDeleteMutationVariables>) {\n        return ApolloReactHooks.useMutation<FollowKeyboardDeleteMutation, FollowKeyboardDeleteMutationVariables>(FollowKeyboardDeleteDocument, baseOptions);\n      }\nexport type FollowKeyboardDeleteMutationHookResult = ReturnType<typeof useFollowKeyboardDeleteMutation>;\nexport type FollowKeyboardDeleteMutationResult = ApolloReactCommon.MutationResult<FollowKeyboardDeleteMutation>;\nexport type FollowKeyboardDeleteMutationOptions = ApolloReactCommon.BaseMutationOptions<FollowKeyboardDeleteMutation, FollowKeyboardDeleteMutationVariables>;\nexport const GenerateAuthDocument = gql`\n    mutation generateAuth($email: String!) {\n  generateAuth(email: $email)\n}\n    `;\nexport type GenerateAuthMutationFn = ApolloReactCommon.MutationFunction<GenerateAuthMutation, GenerateAuthMutationVariables>;\n\n/**\n * __useGenerateAuthMutation__\n *\n * To run a mutation, you first call `useGenerateAuthMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGenerateAuthMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [generateAuthMutation, { data, loading, error }] = useGenerateAuthMutation({\n *   variables: {\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useGenerateAuthMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<GenerateAuthMutation, GenerateAuthMutationVariables>) {\n        return ApolloReactHooks.useMutation<GenerateAuthMutation, GenerateAuthMutationVariables>(GenerateAuthDocument, baseOptions);\n      }\nexport type GenerateAuthMutationHookResult = ReturnType<typeof useGenerateAuthMutation>;\nexport type GenerateAuthMutationResult = ApolloReactCommon.MutationResult<GenerateAuthMutation>;\nexport type GenerateAuthMutationOptions = ApolloReactCommon.BaseMutationOptions<GenerateAuthMutation, GenerateAuthMutationVariables>;\nexport const JoinKeyboardDocument = gql`\n    mutation joinKeyboard($id: String!, $data: JoinKeyboardInput!) {\n  joinKeyboard(id: $id, data: $data)\n}\n    `;\nexport type JoinKeyboardMutationFn = ApolloReactCommon.MutationFunction<JoinKeyboardMutation, JoinKeyboardMutationVariables>;\n\n/**\n * __useJoinKeyboardMutation__\n *\n * To run a mutation, you first call `useJoinKeyboardMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinKeyboardMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinKeyboardMutation, { data, loading, error }] = useJoinKeyboardMutation({\n *   variables: {\n *      id: // value for 'id'\n *      data: // value for 'data'\n *   },\n * });\n */\nexport function useJoinKeyboardMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<JoinKeyboardMutation, JoinKeyboardMutationVariables>) {\n        return ApolloReactHooks.useMutation<JoinKeyboardMutation, JoinKeyboardMutationVariables>(JoinKeyboardDocument, baseOptions);\n      }\nexport type JoinKeyboardMutationHookResult = ReturnType<typeof useJoinKeyboardMutation>;\nexport type JoinKeyboardMutationResult = ApolloReactCommon.MutationResult<JoinKeyboardMutation>;\nexport type JoinKeyboardMutationOptions = ApolloReactCommon.BaseMutationOptions<JoinKeyboardMutation, JoinKeyboardMutationVariables>;\nexport const KeyboardDocument = gql`\n    query Keyboard($shortId: String!) {\n  keyboard(shortId: $shortId) {\n    angle\n    announcement\n    brand\n    closed\n    connector\n    editions {\n      id\n      name\n      price\n      suggestedPrice\n      cases\n      plates\n    }\n    details\n    firmware\n    groupBuy\n    groupBuySoon\n    id\n    images1500\n    interestCheck\n    layouts\n    market\n    mount\n    name\n    pcb\n    shortId\n    size\n    support\n    posts {\n      id\n      body\n    }\n  }\n}\n    `;\n\n/**\n * __useKeyboardQuery__\n *\n * To run a query within a React component, call `useKeyboardQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeyboardQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeyboardQuery({\n *   variables: {\n *      shortId: // value for 'shortId'\n *   },\n * });\n */\nexport function useKeyboardQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<KeyboardQuery, KeyboardQueryVariables>) {\n        return ApolloReactHooks.useQuery<KeyboardQuery, KeyboardQueryVariables>(KeyboardDocument, baseOptions);\n      }\nexport function useKeyboardLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<KeyboardQuery, KeyboardQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<KeyboardQuery, KeyboardQueryVariables>(KeyboardDocument, baseOptions);\n        }\nexport type KeyboardQueryHookResult = ReturnType<typeof useKeyboardQuery>;\nexport type KeyboardLazyQueryHookResult = ReturnType<typeof useKeyboardLazyQuery>;\nexport type KeyboardQueryResult = ApolloReactCommon.QueryResult<KeyboardQuery, KeyboardQueryVariables>;\nexport const KeyboardAnnouncementDocument = gql`\n    mutation keyboardAnnouncement($id: String!, $announcement: String!) {\n  keyboardAnnouncement(id: $id, announcement: $announcement)\n}\n    `;\nexport type KeyboardAnnouncementMutationFn = ApolloReactCommon.MutationFunction<KeyboardAnnouncementMutation, KeyboardAnnouncementMutationVariables>;\n\n/**\n * __useKeyboardAnnouncementMutation__\n *\n * To run a mutation, you first call `useKeyboardAnnouncementMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useKeyboardAnnouncementMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [keyboardAnnouncementMutation, { data, loading, error }] = useKeyboardAnnouncementMutation({\n *   variables: {\n *      id: // value for 'id'\n *      announcement: // value for 'announcement'\n *   },\n * });\n */\nexport function useKeyboardAnnouncementMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<KeyboardAnnouncementMutation, KeyboardAnnouncementMutationVariables>) {\n        return ApolloReactHooks.useMutation<KeyboardAnnouncementMutation, KeyboardAnnouncementMutationVariables>(KeyboardAnnouncementDocument, baseOptions);\n      }\nexport type KeyboardAnnouncementMutationHookResult = ReturnType<typeof useKeyboardAnnouncementMutation>;\nexport type KeyboardAnnouncementMutationResult = ApolloReactCommon.MutationResult<KeyboardAnnouncementMutation>;\nexport type KeyboardAnnouncementMutationOptions = ApolloReactCommon.BaseMutationOptions<KeyboardAnnouncementMutation, KeyboardAnnouncementMutationVariables>;\nexport const KeyboardPostsDocument = gql`\n    query keyboardPosts($shortId: String!) {\n  keyboard(shortId: $shortId) {\n    id\n    shortId\n    images600\n    name\n    posts {\n      id\n      body\n      created\n      user {\n        username\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useKeyboardPostsQuery__\n *\n * To run a query within a React component, call `useKeyboardPostsQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeyboardPostsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeyboardPostsQuery({\n *   variables: {\n *      shortId: // value for 'shortId'\n *   },\n * });\n */\nexport function useKeyboardPostsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<KeyboardPostsQuery, KeyboardPostsQueryVariables>) {\n        return ApolloReactHooks.useQuery<KeyboardPostsQuery, KeyboardPostsQueryVariables>(KeyboardPostsDocument, baseOptions);\n      }\nexport function useKeyboardPostsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<KeyboardPostsQuery, KeyboardPostsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<KeyboardPostsQuery, KeyboardPostsQueryVariables>(KeyboardPostsDocument, baseOptions);\n        }\nexport type KeyboardPostsQueryHookResult = ReturnType<typeof useKeyboardPostsQuery>;\nexport type KeyboardPostsLazyQueryHookResult = ReturnType<typeof useKeyboardPostsLazyQuery>;\nexport type KeyboardPostsQueryResult = ApolloReactCommon.QueryResult<KeyboardPostsQuery, KeyboardPostsQueryVariables>;\nexport const KeyboardsDocument = gql`\n    query keyboards {\n  keyboards {\n    id\n    images600\n    mount\n    shortId\n    size\n    name\n  }\n}\n    `;\n\n/**\n * __useKeyboardsQuery__\n *\n * To run a query within a React component, call `useKeyboardsQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeyboardsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeyboardsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useKeyboardsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<KeyboardsQuery, KeyboardsQueryVariables>) {\n        return ApolloReactHooks.useQuery<KeyboardsQuery, KeyboardsQueryVariables>(KeyboardsDocument, baseOptions);\n      }\nexport function useKeyboardsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<KeyboardsQuery, KeyboardsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<KeyboardsQuery, KeyboardsQueryVariables>(KeyboardsDocument, baseOptions);\n        }\nexport type KeyboardsQueryHookResult = ReturnType<typeof useKeyboardsQuery>;\nexport type KeyboardsLazyQueryHookResult = ReturnType<typeof useKeyboardsLazyQuery>;\nexport type KeyboardsQueryResult = ApolloReactCommon.QueryResult<KeyboardsQuery, KeyboardsQueryVariables>;\nexport const KeysetDocument = gql`\n    query keyset($shortId: String!) {\n  keyset(shortId: $shortId) {\n    colors {\n      id\n      hex\n      ral\n    }\n    created\n    details\n    id\n    images1500\n    kits {\n      id\n      kit\n      name\n      price\n    }\n    maker {\n      username\n    }\n    name\n    profile\n    shortId\n    stem\n  }\n}\n    `;\n\n/**\n * __useKeysetQuery__\n *\n * To run a query within a React component, call `useKeysetQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeysetQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeysetQuery({\n *   variables: {\n *      shortId: // value for 'shortId'\n *   },\n * });\n */\nexport function useKeysetQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<KeysetQuery, KeysetQueryVariables>) {\n        return ApolloReactHooks.useQuery<KeysetQuery, KeysetQueryVariables>(KeysetDocument, baseOptions);\n      }\nexport function useKeysetLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<KeysetQuery, KeysetQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<KeysetQuery, KeysetQueryVariables>(KeysetDocument, baseOptions);\n        }\nexport type KeysetQueryHookResult = ReturnType<typeof useKeysetQuery>;\nexport type KeysetLazyQueryHookResult = ReturnType<typeof useKeysetLazyQuery>;\nexport type KeysetQueryResult = ApolloReactCommon.QueryResult<KeysetQuery, KeysetQueryVariables>;\nexport const KeysetsDocument = gql`\n    query keysets {\n  keysets {\n    id\n    shortId\n    name\n    profile\n    images600\n  }\n}\n    `;\n\n/**\n * __useKeysetsQuery__\n *\n * To run a query within a React component, call `useKeysetsQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeysetsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeysetsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useKeysetsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<KeysetsQuery, KeysetsQueryVariables>) {\n        return ApolloReactHooks.useQuery<KeysetsQuery, KeysetsQueryVariables>(KeysetsDocument, baseOptions);\n      }\nexport function useKeysetsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<KeysetsQuery, KeysetsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<KeysetsQuery, KeysetsQueryVariables>(KeysetsDocument, baseOptions);\n        }\nexport type KeysetsQueryHookResult = ReturnType<typeof useKeysetsQuery>;\nexport type KeysetsLazyQueryHookResult = ReturnType<typeof useKeysetsLazyQuery>;\nexport type KeysetsQueryResult = ApolloReactCommon.QueryResult<KeysetsQuery, KeysetsQueryVariables>;\nexport const LoginDocument = gql`\n    mutation login($email: String!, $secret: String!) {\n  login(email: $email, secret: $secret) {\n    accessToken\n    user {\n      id\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      secret: // value for 'secret'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const MakeKeyboardDocument = gql`\n    mutation makeKeyboard($data: KeyboardInput!, $images: [Upload!]!) {\n  makeKeyboard(data: $data, images: $images)\n}\n    `;\nexport type MakeKeyboardMutationFn = ApolloReactCommon.MutationFunction<MakeKeyboardMutation, MakeKeyboardMutationVariables>;\n\n/**\n * __useMakeKeyboardMutation__\n *\n * To run a mutation, you first call `useMakeKeyboardMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMakeKeyboardMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [makeKeyboardMutation, { data, loading, error }] = useMakeKeyboardMutation({\n *   variables: {\n *      data: // value for 'data'\n *      images: // value for 'images'\n *   },\n * });\n */\nexport function useMakeKeyboardMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<MakeKeyboardMutation, MakeKeyboardMutationVariables>) {\n        return ApolloReactHooks.useMutation<MakeKeyboardMutation, MakeKeyboardMutationVariables>(MakeKeyboardDocument, baseOptions);\n      }\nexport type MakeKeyboardMutationHookResult = ReturnType<typeof useMakeKeyboardMutation>;\nexport type MakeKeyboardMutationResult = ApolloReactCommon.MutationResult<MakeKeyboardMutation>;\nexport type MakeKeyboardMutationOptions = ApolloReactCommon.BaseMutationOptions<MakeKeyboardMutation, MakeKeyboardMutationVariables>;\nexport const MakeKeysetDocument = gql`\n    mutation makeKeyset($data: KeysetInput!, $images: [Upload!]!) {\n  makeKeyset(data: $data, images: $images)\n}\n    `;\nexport type MakeKeysetMutationFn = ApolloReactCommon.MutationFunction<MakeKeysetMutation, MakeKeysetMutationVariables>;\n\n/**\n * __useMakeKeysetMutation__\n *\n * To run a mutation, you first call `useMakeKeysetMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMakeKeysetMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [makeKeysetMutation, { data, loading, error }] = useMakeKeysetMutation({\n *   variables: {\n *      data: // value for 'data'\n *      images: // value for 'images'\n *   },\n * });\n */\nexport function useMakeKeysetMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<MakeKeysetMutation, MakeKeysetMutationVariables>) {\n        return ApolloReactHooks.useMutation<MakeKeysetMutation, MakeKeysetMutationVariables>(MakeKeysetDocument, baseOptions);\n      }\nexport type MakeKeysetMutationHookResult = ReturnType<typeof useMakeKeysetMutation>;\nexport type MakeKeysetMutationResult = ApolloReactCommon.MutationResult<MakeKeysetMutation>;\nexport type MakeKeysetMutationOptions = ApolloReactCommon.BaseMutationOptions<MakeKeysetMutation, MakeKeysetMutationVariables>;\nexport const MeDocument = gql`\n    query Me {\n  me {\n    id\n    email\n    username\n    keyboardjoins {\n      id\n    }\n    follows {\n      id\n      keyboard {\n        id\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useMeQuery__\n *\n * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.\n * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMeQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMeQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<MeQuery, MeQueryVariables>) {\n        return ApolloReactHooks.useQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n      }\nexport function useMeLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, baseOptions);\n        }\nexport type MeQueryHookResult = ReturnType<typeof useMeQuery>;\nexport type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;\nexport type MeQueryResult = ApolloReactCommon.QueryResult<MeQuery, MeQueryVariables>;\nexport const SignupDocument = gql`\n    mutation signup($username: String!, $email: String!, $secret: String!) {\n  signup(username: $username, email: $email, secret: $secret)\n}\n    `;\nexport type SignupMutationFn = ApolloReactCommon.MutationFunction<SignupMutation, SignupMutationVariables>;\n\n/**\n * __useSignupMutation__\n *\n * To run a mutation, you first call `useSignupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useSignupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [signupMutation, { data, loading, error }] = useSignupMutation({\n *   variables: {\n *      username: // value for 'username'\n *      email: // value for 'email'\n *      secret: // value for 'secret'\n *   },\n * });\n */\nexport function useSignupMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<SignupMutation, SignupMutationVariables>) {\n        return ApolloReactHooks.useMutation<SignupMutation, SignupMutationVariables>(SignupDocument, baseOptions);\n      }\nexport type SignupMutationHookResult = ReturnType<typeof useSignupMutation>;\nexport type SignupMutationResult = ApolloReactCommon.MutationResult<SignupMutation>;\nexport type SignupMutationOptions = ApolloReactCommon.BaseMutationOptions<SignupMutation, SignupMutationVariables>;\nexport const SortKeyboardsDocument = gql`\n    query sortKeyboards($where: SearchInput!) {\n  sortKeyboards(where: $where) {\n    id\n    shortId\n    name\n    mount\n    size\n    images600\n  }\n}\n    `;\n\n/**\n * __useSortKeyboardsQuery__\n *\n * To run a query within a React component, call `useSortKeyboardsQuery` and pass it any options that fit your needs.\n * When your component renders, `useSortKeyboardsQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSortKeyboardsQuery({\n *   variables: {\n *      where: // value for 'where'\n *   },\n * });\n */\nexport function useSortKeyboardsQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<SortKeyboardsQuery, SortKeyboardsQueryVariables>) {\n        return ApolloReactHooks.useQuery<SortKeyboardsQuery, SortKeyboardsQueryVariables>(SortKeyboardsDocument, baseOptions);\n      }\nexport function useSortKeyboardsLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<SortKeyboardsQuery, SortKeyboardsQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<SortKeyboardsQuery, SortKeyboardsQueryVariables>(SortKeyboardsDocument, baseOptions);\n        }\nexport type SortKeyboardsQueryHookResult = ReturnType<typeof useSortKeyboardsQuery>;\nexport type SortKeyboardsLazyQueryHookResult = ReturnType<typeof useSortKeyboardsLazyQuery>;\nexport type SortKeyboardsQueryResult = ApolloReactCommon.QueryResult<SortKeyboardsQuery, SortKeyboardsQueryVariables>;\nexport const UpdateKeyboardDocument = gql`\n    mutation updateKeyboard($id: String!, $data: KeyboardInput!) {\n  updateKeyboard(id: $id, data: $data)\n}\n    `;\nexport type UpdateKeyboardMutationFn = ApolloReactCommon.MutationFunction<UpdateKeyboardMutation, UpdateKeyboardMutationVariables>;\n\n/**\n * __useUpdateKeyboardMutation__\n *\n * To run a mutation, you first call `useUpdateKeyboardMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateKeyboardMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateKeyboardMutation, { data, loading, error }] = useUpdateKeyboardMutation({\n *   variables: {\n *      id: // value for 'id'\n *      data: // value for 'data'\n *   },\n * });\n */\nexport function useUpdateKeyboardMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<UpdateKeyboardMutation, UpdateKeyboardMutationVariables>) {\n        return ApolloReactHooks.useMutation<UpdateKeyboardMutation, UpdateKeyboardMutationVariables>(UpdateKeyboardDocument, baseOptions);\n      }\nexport type UpdateKeyboardMutationHookResult = ReturnType<typeof useUpdateKeyboardMutation>;\nexport type UpdateKeyboardMutationResult = ApolloReactCommon.MutationResult<UpdateKeyboardMutation>;\nexport type UpdateKeyboardMutationOptions = ApolloReactCommon.BaseMutationOptions<UpdateKeyboardMutation, UpdateKeyboardMutationVariables>;\nexport const UserDashboardDocument = gql`\n    query userDashboard {\n  me {\n    id\n    username\n    email\n    keyboards {\n      id\n      shortId\n      name\n      joins {\n        id\n      }\n      interestCheck\n      groupBuy\n      groupBuySoon\n      closed\n    }\n    keyboardjoins {\n      id\n      keyboard {\n        shortId\n        id\n        name\n      }\n    }\n    follows {\n      id\n      keyboard {\n        id\n        name\n        size\n        mount\n        shortId\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useUserDashboardQuery__\n *\n * To run a query within a React component, call `useUserDashboardQuery` and pass it any options that fit your needs.\n * When your component renders, `useUserDashboardQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserDashboardQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useUserDashboardQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UserDashboardQuery, UserDashboardQueryVariables>) {\n        return ApolloReactHooks.useQuery<UserDashboardQuery, UserDashboardQueryVariables>(UserDashboardDocument, baseOptions);\n      }\nexport function useUserDashboardLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UserDashboardQuery, UserDashboardQueryVariables>) {\n          return ApolloReactHooks.useLazyQuery<UserDashboardQuery, UserDashboardQueryVariables>(UserDashboardDocument, baseOptions);\n        }\nexport type UserDashboardQueryHookResult = ReturnType<typeof useUserDashboardQuery>;\nexport type UserDashboardLazyQueryHookResult = ReturnType<typeof useUserDashboardLazyQuery>;\nexport type UserDashboardQueryResult = ApolloReactCommon.QueryResult<UserDashboardQuery, UserDashboardQueryVariables>;\nexport const VoteKeyboardDownDocument = gql`\n    mutation voteKeyboardDown($id: String!) {\n  voteKeyboardDown(id: $id)\n}\n    `;\nexport type VoteKeyboardDownMutationFn = ApolloReactCommon.MutationFunction<VoteKeyboardDownMutation, VoteKeyboardDownMutationVariables>;\n\n/**\n * __useVoteKeyboardDownMutation__\n *\n * To run a mutation, you first call `useVoteKeyboardDownMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useVoteKeyboardDownMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [voteKeyboardDownMutation, { data, loading, error }] = useVoteKeyboardDownMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useVoteKeyboardDownMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<VoteKeyboardDownMutation, VoteKeyboardDownMutationVariables>) {\n        return ApolloReactHooks.useMutation<VoteKeyboardDownMutation, VoteKeyboardDownMutationVariables>(VoteKeyboardDownDocument, baseOptions);\n      }\nexport type VoteKeyboardDownMutationHookResult = ReturnType<typeof useVoteKeyboardDownMutation>;\nexport type VoteKeyboardDownMutationResult = ApolloReactCommon.MutationResult<VoteKeyboardDownMutation>;\nexport type VoteKeyboardDownMutationOptions = ApolloReactCommon.BaseMutationOptions<VoteKeyboardDownMutation, VoteKeyboardDownMutationVariables>;\nexport const VoteKeyboardUpDocument = gql`\n    mutation voteKeyboardUp($id: String!) {\n  voteKeyboardUp(id: $id)\n}\n    `;\nexport type VoteKeyboardUpMutationFn = ApolloReactCommon.MutationFunction<VoteKeyboardUpMutation, VoteKeyboardUpMutationVariables>;\n\n/**\n * __useVoteKeyboardUpMutation__\n *\n * To run a mutation, you first call `useVoteKeyboardUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useVoteKeyboardUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [voteKeyboardUpMutation, { data, loading, error }] = useVoteKeyboardUpMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useVoteKeyboardUpMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<VoteKeyboardUpMutation, VoteKeyboardUpMutationVariables>) {\n        return ApolloReactHooks.useMutation<VoteKeyboardUpMutation, VoteKeyboardUpMutationVariables>(VoteKeyboardUpDocument, baseOptions);\n      }\nexport type VoteKeyboardUpMutationHookResult = ReturnType<typeof useVoteKeyboardUpMutation>;\nexport type VoteKeyboardUpMutationResult = ApolloReactCommon.MutationResult<VoteKeyboardUpMutation>;\nexport type VoteKeyboardUpMutationOptions = ApolloReactCommon.BaseMutationOptions<VoteKeyboardUpMutation, VoteKeyboardUpMutationVariables>;","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/promise\");","var _Object$assign = require(\"../core-js/object/assign\");\n\nfunction _extends() {\n  module.exports = _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _Object$getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            _Object$defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nmodule.exports = _interopRequireWildcard;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _map=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));var _url=require(\"url\");var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _router=_interopRequireDefault(require(\"./router\"));var _rewriteUrlForExport=require(\"../next-server/lib/router/rewrite-url-for-export\");var _utils=require(\"../next-server/lib/utils\");/* global __NEXT_DATA__ */function isLocal(href){const url=(0,_url.parse)(href,false,true);const origin=(0,_url.parse)((0,_utils.getLocationOrigin)(),false,true);return!url.host||url.protocol===origin.protocol&&url.host===origin.host;}function memoizedFormatUrl(formatFunc){let lastHref=null;let lastAs=null;let lastResult=null;return(href,as)=>{if(lastResult&&href===lastHref&&as===lastAs){return lastResult;}const result=formatFunc(href,as);lastHref=href;lastAs=as;lastResult=result;return result;};}function formatUrl(url){return url&&typeof url==='object'?(0,_utils.formatWithValidation)(url):url;}let observer;const listeners=new _map.default();const IntersectionObserver=typeof window!=='undefined'?window.IntersectionObserver:null;function getObserver(){// Return shared instance of IntersectionObserver if already created\nif(observer){return observer;}// Only create shared IntersectionObserver if supported in browser\nif(!IntersectionObserver){return undefined;}return observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(!listeners.has(entry.target)){return;}const cb=listeners.get(entry.target);if(entry.isIntersecting||entry.intersectionRatio>0){observer.unobserve(entry.target);listeners.delete(entry.target);cb();}});},{rootMargin:'200px'});}const listenToIntersections=(el,cb)=>{const observer=getObserver();if(!observer){return()=>{};}observer.observe(el);listeners.set(el,cb);return()=>{try{observer.unobserve(el);}catch(err){console.error(err);}listeners.delete(el);};};class Link extends _react.Component{constructor(props){super(props);this.p=void 0;this.cleanUpListeners=()=>{};this.formatUrls=memoizedFormatUrl((href,asHref)=>{return{href:formatUrl(href),as:asHref?formatUrl(asHref):asHref};});this.linkClicked=e=>{// @ts-ignore target exists on currentTarget\nconst{nodeName,target}=e.currentTarget;if(nodeName==='A'&&(target&&target!=='_self'||e.metaKey||e.ctrlKey||e.shiftKey||e.nativeEvent&&e.nativeEvent.which===2)){// ignore click for new tab / new window behavior\nreturn;}let{href,as}=this.formatUrls(this.props.href,this.props.as);if(!isLocal(href)){// ignore click if it's outside our scope (e.g. https://google.com)\nreturn;}const{pathname}=window.location;href=(0,_url.resolve)(pathname,href);as=as?(0,_url.resolve)(pathname,as):href;e.preventDefault();//  avoid scroll for urls with anchor refs\nlet{scroll}=this.props;if(scroll==null){scroll=as.indexOf('#')<0;}// replace state instead of push if prop is present\n_router.default[this.props.replace?'replace':'push'](href,as,{shallow:this.props.shallow}).then(success=>{if(!success)return;if(scroll){window.scrollTo(0,0);document.body.focus();}});};if(process.env.NODE_ENV!=='production'){if(props.prefetch){console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');}}this.p=props.prefetch!==false;}componentWillUnmount(){this.cleanUpListeners();}handleRef(ref){if(this.p&&IntersectionObserver&&ref&&ref.tagName){this.cleanUpListeners();this.cleanUpListeners=listenToIntersections(ref,()=>{this.prefetch();});}}// The function is memoized so that no extra lifecycles are needed\n// as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\nprefetch(){if(!this.p||typeof window==='undefined')return;// Prefetch the JSON page if asked (only in the client)\nconst{pathname}=window.location;const{href:parsedHref}=this.formatUrls(this.props.href,this.props.as);const href=(0,_url.resolve)(pathname,parsedHref);_router.default.prefetch(href);}render(){let{children}=this.props;const{href,as}=this.formatUrls(this.props.href,this.props.as);// Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\nif(typeof children==='string'){children=_react.default.createElement(\"a\",null,children);}// This will return the first child, if multiple are provided it will throw an error\nconst child=_react.Children.only(children);const props={ref:el=>{this.handleRef(el);if(child&&typeof child==='object'&&child.ref){if(typeof child.ref==='function')child.ref(el);else if(typeof child.ref==='object'){child.ref.current=el;}}},onMouseEnter:e=>{if(child.props&&typeof child.props.onMouseEnter==='function'){child.props.onMouseEnter(e);}this.prefetch();},onClick:e=>{if(child.props&&typeof child.props.onClick==='function'){child.props.onClick(e);}if(!e.defaultPrevented){this.linkClicked(e);}}// If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n// defined, we specify the current 'href', so that repetition is not needed by the user\n};if(this.props.passHref||child.type==='a'&&!('href'in child.props)){props.href=as||href;}// Add the ending slash to the paths. So, we can serve the\n// \"<page>/index.html\" directly.\nif(process.env.__NEXT_EXPORT_TRAILING_SLASH){if(props.href&&typeof __NEXT_DATA__!=='undefined'&&__NEXT_DATA__.nextExport){props.href=(0,_rewriteUrlForExport.rewriteUrlForNextExport)(props.href);}}return _react.default.cloneElement(child,props);}}Link.propTypes=void 0;if(process.env.NODE_ENV==='development'){const warn=(0,_utils.execOnce)(console.error);// This module gets removed by webpack.IgnorePlugin\nconst exact=require('prop-types-exact');Link.propTypes=exact({href:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]).isRequired,as:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),prefetch:_propTypes.default.bool,replace:_propTypes.default.bool,shallow:_propTypes.default.bool,passHref:_propTypes.default.bool,scroll:_propTypes.default.bool,children:_propTypes.default.oneOfType([_propTypes.default.element,(props,propName)=>{const value=props[propName];if(typeof value==='string'){warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");}return null;}]).isRequired});}var _default=Link;exports.default=_default;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.useRouter=useRouter;exports.makePublicRouterInstance=makePublicRouterInstance;exports.createRouter=exports.withRouter=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _defineProperty=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/define-property\"));var _react=_interopRequireDefault(require(\"react\"));var _router2=_interopRequireWildcard(require(\"../next-server/lib/router/router\"));exports.Router=_router2.default;exports.NextRouter=_router2.NextRouter;var _routerContext=require(\"../next-server/lib/router-context\");var _withRouter=_interopRequireDefault(require(\"./with-router\"));exports.withRouter=_withRouter.default;/* global window */const singletonRouter={router:null,// holds the actual router instance\nreadyCallbacks:[],ready(cb){if(this.router)return cb();if(typeof window!=='undefined'){this.readyCallbacks.push(cb);}}};// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields=['pathname','route','query','asPath','components'];const routerEvents=['routeChangeStart','beforeHistoryChange','routeChangeComplete','routeChangeError','hashChangeStart','hashChangeComplete'];const coreMethodFields=['push','replace','reload','back','prefetch','beforePopState'];// Events is a static property on the router, the router doesn't have to be initialized to use it\n(0,_defineProperty.default)(singletonRouter,'events',{get(){return _router2.default.events;}});urlPropertyFields.forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\n(0,_defineProperty.default)(singletonRouter,field,{get(){const router=getRouter();return router[field];}});});coreMethodFields.forEach(field=>{// We don't really know the types here, so we add them later instead\n;singletonRouter[field]=function(){const router=getRouter();return router[field](...arguments);};});routerEvents.forEach(event=>{singletonRouter.ready(()=>{_router2.default.events.on(event,function(){const eventField=\"on\"+event.charAt(0).toUpperCase()+event.substring(1);const _singletonRouter=singletonRouter;if(_singletonRouter[eventField]){try{_singletonRouter[eventField](...arguments);}catch(err){// tslint:disable-next-line:no-console\nconsole.error(\"Error when running the Router event: \"+eventField);// tslint:disable-next-line:no-console\nconsole.error(err.message+\"\\n\"+err.stack);}}});});});function getRouter(){if(!singletonRouter.router){const message='No router instance found.\\n'+'You should only use \"next/router\" inside the client side of your app.\\n';throw new Error(message);}return singletonRouter.router;}// Export the singletonRouter and this is the public API.\nvar _default=singletonRouter;// Reexport the withRoute HOC\nexports.default=_default;function useRouter(){return _react.default.useContext(_routerContext.RouterContext);}// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nconst createRouter=function createRouter(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}singletonRouter.router=new _router2.default(...args);singletonRouter.readyCallbacks.forEach(cb=>cb());singletonRouter.readyCallbacks=[];return singletonRouter.router;};// This function is used to create the `withRouter` router instance\nexports.createRouter=createRouter;function makePublicRouterInstance(router){const _router=router;const instance={};for(const property of urlPropertyFields){if(typeof _router[property]==='object'){instance[property]=(0,_extends2.default)({},_router[property]);// makes sure query is not stateful\ncontinue;}instance[property]=_router[property];}// Events is a static property on the router, the router doesn't have to be initialized to use it\ninstance.events=_router2.default.events;coreMethodFields.forEach(field=>{instance[field]=function(){return _router[field](...arguments);};});return instance;}","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=withRouter;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));function withRouter(ComposedComponent){class WithRouteWrapper extends _react.default.Component{constructor(){super(...arguments);this.context=void 0;}render(){return _react.default.createElement(ComposedComponent,(0,_extends2.default)({router:this.context.router},this.props));}}WithRouteWrapper.displayName=void 0;WithRouteWrapper.getInitialProps=void 0;WithRouteWrapper.contextTypes={router:_propTypes.default.object};WithRouteWrapper.getInitialProps=ComposedComponent.getInitialProps// This is needed to allow checking for custom getInitialProps in _app\n;WithRouteWrapper.origGetInitialProps=ComposedComponent.origGetInitialProps;if(process.env.NODE_ENV!=='production'){const name=ComposedComponent.displayName||ComposedComponent.name||'Unknown';WithRouteWrapper.displayName=\"withRouter(\"+name+\")\";}return WithRouteWrapper;}","\"use strict\";\n/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction mitt() {\n    const all = Object.create(null);\n    return {\n        on(type, handler) {\n            ;\n            (all[type] || (all[type] = [])).push(handler);\n        },\n        off(type, handler) {\n            if (all[type]) {\n                // tslint:disable-next-line:no-bitwise\n                all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(type, ...evts) {\n            ;\n            (all[type] || []).slice().map((handler) => {\n                handler(...evts);\n            });\n        },\n    };\n}\nexports.default = mitt;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.RouterContext = React.createContext(null);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction rewriteUrlForNextExport(url) {\n    const [pathname, hash] = url.split('#');\n    // tslint:disable-next-line\n    let [path, qs] = pathname.split('?');\n    path = path.replace(/\\/$/, '');\n    // Append a trailing slash if this path does not have an extension\n    if (!/\\.[^/]+\\/?$/.test(path))\n        path += `/`;\n    if (qs)\n        path += '?' + qs;\n    if (hash)\n        path += '#' + hash;\n    return path;\n}\nexports.rewriteUrlForNextExport = rewriteUrlForNextExport;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nconst rewrite_url_for_export_1 = require(\"./rewrite-url-for-export\");\nconst route_matcher_1 = require(\"./utils/route-matcher\");\nconst route_regex_1 = require(\"./utils/route-regex\");\nconst is_dynamic_1 = require(\"./utils/is-dynamic\");\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, }) {\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state.options && e.state.options.fromExternal) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = { Component, props: initialProps, err };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        // @ts-ignore backwards compatibility\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        this.asPath =\n            // @ts-ignore this is temporarily global (attached to window)\n            is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.nextExport ? pathname : as;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n            window.addEventListener('unload', () => {\n                // Workaround for popstate firing on initial page load when\n                // navigating back from an external site\n                if (history.state) {\n                    const { url, as, options } = history.state;\n                    this.changeState('replaceState', url, as, Object.assign({}, options, { fromExternal: true }));\n                }\n            });\n        }\n    }\n    // @deprecated backwards compatibility even though it's a private method.\n    static _rewriteUrlForNextExport(url) {\n        return rewrite_url_for_export_1.rewriteUrlForNextExport(url);\n    }\n    update(route, mod) {\n        const Component = mod.default || mod;\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign({}, data, { Component });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n    back() {\n        window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            // marking route changes as a navigation start entry\n            if (utils_1.SUPPORTS_PERFORMANCE_USER_TIMING) {\n                performance.mark('routeChange');\n            }\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = rewrite_url_for_export_1.rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            if (!options._h && this.onlyAHashChange(as)) {\n                this.asPath = as;\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return resolve(true);\n            }\n            const { pathname, query, protocol } = url_1.parse(url, true);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return resolve(false);\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            // @ts-ignore pathname is always a string\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            if (is_dynamic_1.isDynamicRoute(route)) {\n                const { pathname: asPathname } = url_1.parse(as);\n                const rr = route_regex_1.getRouteRegex(route);\n                const routeMatch = route_matcher_1.getRouteMatcher(rr)(asPathname);\n                if (!routeMatch) {\n                    console.error('The provided `as` value is incompatible with the `href` value. This is invalid. https://err.sh/zeit/next.js/incompatible-href-as');\n                    return resolve(false);\n                }\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            // @ts-ignore pathname is always a string\n            this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                const hash = window.location.hash.substring(1);\n                if (process.env.NODE_ENV !== 'production') {\n                    const appComp = this.components['/_app'].Component;\n                    window.next.isPrerendered =\n                        appComp.getInitialProps === appComp.origGetInitialProps &&\n                            !routeInfo.Component.getInitialProps;\n                }\n                // @ts-ignore pathname is always defined\n                this.set(route, pathname, query, as, Object.assign({}, routeInfo, { hash }));\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            // @ts-ignore method should always exist on history\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            // @ts-ignore method should always exist on history\n            window.history[method]({ url, as, options }, null, as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then(Component => resolve({ Component }), reject);\n        })\n            .then((routeInfo) => {\n            const { Component } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return new Promise((resolve, reject) => {\n                // we provide AppTree later so this needs to be `any`\n                this.getInitialProps(Component, {\n                    pathname,\n                    query,\n                    asPath: as,\n                }).then(props => {\n                    routeInfo.props = props;\n                    this.components[route] = routeInfo;\n                    resolve(routeInfo);\n                }, reject);\n            });\n        })\n            .catch(err => {\n            return new Promise(resolve => {\n                if (err.code === 'PAGE_LOAD_ERROR') {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error').then(Component => {\n                    const routeInfo = { Component, err };\n                    return new Promise(resolve => {\n                        this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query,\n                        }).then(props => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, gipErr => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                }));\n            });\n        });\n    }\n    set(route, pathname, query, as, data) {\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch `page` code, you may wait for the data during `page` rendering.\n     * This feature only works in production!\n     * @param url of prefetched `page`\n     */\n    prefetch(url) {\n        return new Promise((resolve, reject) => {\n            const { pathname, protocol } = url_1.parse(url);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return;\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production')\n                return;\n            // @ts-ignore pathname is always defined\n            const route = toRoute(pathname);\n            this.pageLoader.prefetch(route).then(resolve, reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = (this.clc = () => {\n            cancelled = true;\n        });\n        const Component = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        return Component;\n    }\n    async getInitialProps(Component, ctx) {\n        let cancelled = false;\n        const cancel = () => {\n            cancelled = true;\n        };\n        this.clc = cancel;\n        const { Component: App } = this.components['/_app'];\n        let props;\n        if (\n        // @ts-ignore workaround for dead-code elimination\n        (self.__HAS_SPR || process.env.NODE_ENV !== 'production') &&\n            Component.__NEXT_SPR) {\n            let status;\n            const { pathname } = url_1.parse(ctx.asPath || ctx.pathname);\n            props = await fetch(`/_next/data${pathname}.json`)\n                .then(res => {\n                if (!res.ok) {\n                    status = res.status;\n                    throw new Error('failed to load prerender data');\n                }\n                return res.json();\n            })\n                .catch((err) => {\n                console.error(`Failed to load data`, status, err);\n                window.location.href = pathname;\n                return new Promise(() => { });\n            });\n        }\n        else {\n            const AppTree = this._wrapApp(App);\n            ctx.AppTree = AppTree;\n            props = await utils_1.loadGetInitialProps(App, {\n                AppTree,\n                Component,\n                router: this,\n                ctx,\n            });\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        if (cancelled) {\n            const err = new Error('Loading initial props cancelled');\n            err.cancelled = true;\n            throw err;\n        }\n        return props;\n    }\n    abortComponentLoad(as) {\n        if (this.clc) {\n            const e = new Error('Route Cancelled');\n            e.cancelled = true;\n            Router.events.emit('routeChangeError', e, as);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data) {\n        this.sub(data, this.components['/_app'].Component);\n    }\n}\nRouter.events = mitt_1.default();\nexports.default = Router;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^\\/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    return TEST_ROUTE.test(route);\n}\nexports.isDynamicRoute = isDynamicRoute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteMatcher(routeRegex) {\n    const { re, groups } = routeRegex;\n    return (pathname) => {\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const params = {};\n        Object.keys(groups).forEach((slugName) => {\n            const m = routeMatch[groups[slugName]];\n            if (m !== undefined) {\n                params[slugName] = decodeURIComponent(m);\n            }\n        });\n        return params;\n    };\n}\nexports.getRouteMatcher = getRouteMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteRegex(normalizedRoute) {\n    // Escape all characters that could be considered RegEx\n    const escapedRoute = (normalizedRoute.replace(/\\/$/, '') || '/').replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n    const groups = {};\n    let groupIndex = 1;\n    const parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^\\/]+?)\\\\\\](?=\\/|$)/g, (_, $1) => ((groups[$1\n        // Un-escape key\n        .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')] = groupIndex++),\n        '/([^/]+?)'));\n    return {\n        re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n        groups,\n    };\n}\nexports.getRouteRegex = getRouteRegex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\n/**\n * Utils\n */\nfunction execOnce(fn) {\n    let used = false;\n    return (...args) => {\n        if (!used) {\n            used = true;\n            fn.apply(this, args);\n        }\n    };\n}\nexports.execOnce = execOnce;\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\nexports.getLocationOrigin = getLocationOrigin;\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nexports.getURL = getURL;\nfunction getDisplayName(Component) {\n    return typeof Component === 'string'\n        ? Component\n        : Component.displayName || Component.name || 'Unknown';\n}\nexports.getDisplayName = getDisplayName;\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nexports.isResSent = isResSent;\nasync function loadGetInitialProps(Component, ctx) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (Component.prototype && Component.prototype.getInitialProps) {\n            const message = `\"${getDisplayName(Component)}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || (ctx.ctx && ctx.ctx.res);\n    if (!Component.getInitialProps) {\n        return {};\n    }\n    const props = await Component.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = `\"${getDisplayName(Component)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n        throw new Error(message);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(`${getDisplayName(Component)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);\n        }\n    }\n    return props;\n}\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes',\n];\nfunction formatWithValidation(url, options) {\n    if (process.env.NODE_ENV === 'development') {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach(key => {\n                if (exports.urlObjectKeys.indexOf(key) === -1) {\n                    console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n                }\n            });\n        }\n    }\n    return url_1.format(url, options);\n}\nexports.formatWithValidation = formatWithValidation;\nexports.SUPPORTS_PERFORMANCE = typeof performance !== 'undefined';\nexports.SUPPORTS_PERFORMANCE_USER_TIMING = exports.SUPPORTS_PERFORMANCE &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function';\n","module.exports = require('./dist/client/link')\n","/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_LAZY_TYPE:\n      case REACT_MEMO_TYPE:\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\n// AsyncMode is deprecated along with isAsyncMode\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\n\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\n// AsyncMode should be deprecated\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true;\n      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\n\nimport Link from \"next/link\";\n\nimport { GetProps } from \"interfaces/GetProps\";\nimport { text } from \"styles/text\";\nimport css from \"@emotion/css\";\nimport Tile from \"components/Tile\";\nimport { useKeyboardsQuery } from \"generated/graphql\";\n\nconst Keyboards: GetProps<any> = ({ authUser }) => {\n  const { loading, error, data } = useKeyboardsQuery();\n\n  return (\n    <Layout title=\"Keyboards\" authUser={authUser}>\n      <h1 css={text.heading}>Keyboards</h1>\n      {!loading && data && (\n        <div css={grid50}>\n          {data.keyboards.map((k: any) => (\n            <Link\n              href=\"/keyboard/[shortId]\"\n              as={`/keyboard/${k.shortId}`}\n              key={k.id}\n            >\n              <a>\n                <Tile\n                  image={k.images600[0]}\n                  mount={k.mount}\n                  name={k.name}\n                  size={k.size}\n                  key={k.id}\n                />\n              </a>\n            </Link>\n          ))}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default Keyboards;\n\nconst grid50 = css`\n  display: grid;\n  grid-template-columns: calc(50% - 10px) calc(50% - 10px);\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n`;\n","import { jsx, css } from '@emotion/core'\n\nexport const colors = {\n  black70: 'rgba(0,0,0,.7)',\n  black60: 'rgba(0,0,0,.6)',\n  black50: 'rgba(0,0,0,.5)',\n  black40: 'rgba(0,0,0,.4)',\n  black30: 'rgba(0,0,0,.3)',\n  black20: 'rgba(0,0,0,.2)',\n  black10: 'rgba(0,0,0,.1)',\n  black05: 'rgba(0,0,0,.05)',\n  white: 'rgba(255,255,255,1)'\n};\n\nconst row = css`\n  display: flex;\n`;\nconst rowwrap = css`\n  display: flex; flex-flow: row wrap;\n`;\nconst column = css`\n  display: flex; flex-flow: column;\n`;\nconst justifycenter = css`\n  justify-content: center;\n`\nconst space = css`\n  justify-content: space-between;\n`\nconst itemscenter = css`\n  align-items: center;\n`\nexport const borderBox = css`\n  padding: 20px;\n  border-radius: 4px;\n  border: solid 1px ${colors.black05};\n\n  h5 {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const grid50 = css`\n  display: grid;\n  grid-template-columns: calc(50% - 5px) calc(50% - 5px);\n  grid-column-gap: 10px;\n`\nexport const grid33 = css`\n  display: grid;\n  grid-template-columns: calc(33% - 6px) calc(33% - 6px) calc(33% - 6px);\n  grid-column-gap: 12px;\n`\n\nexport const flex = {\n  row,\n  rowwrap,\n  column,\n  justifycenter,\n  space,\n  itemscenter,\n}\n\nexport const margins = (margins: string) => css`\n  margin: ${margins};\n`\nexport const paddings = (paddings: string) => css`\n  padding: ${paddings};\n`\n\nexport const hundo = css`\n  width: 100%;\n`\n\nexport const globalStyle = css`\n  html {\n    overflow-y: scroll;\n  } \n  *, &::before, &::after {\n    box-sizing: border-box;\n  }\n  body, ul, li, a, p, span, h1, h2, h3, h4, h5, h6, nav, header, footer {\n    margin: 0;\n    padding: 0;\n    font-family: 'Helvetica Neue',-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: ${colors.black70};\n    text-decoration: none;\n  }\n  body {\n    display: flex;\n    justify-content: center;\n    background: ${colors.white};\n  }\n  button {\n    cursor: pointer;\n  }\n  ul {\n    list-style: none;\n    padding-left: 0;\n  }\n  p {\n    color: ${colors.black60};\n  }\n`;","import { jsx, css } from '@emotion/core'\nimport { colors } from './main'\n\nexport const fontSize = {\n  huge: '6rem',\n  big: '3rem',\n  small: '.875rem',\n  tiny: '.75rem'\n}\n\nconst line = css`\n  font-size: .875rem;\n  line-height: 24px;\n  color: ${colors.black60};\n`\n\nexport const f1 = css`\n  font-size: 3rem;\n  color: ${colors.black70};\n`\n\nexport const text = {\n  line: line,\n  heading: f1\n}","module.exports = require(\"@apollo/react-hooks\");","module.exports = require(\"@emotion/core\");","module.exports = require(\"@emotion/css\");","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAGA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA8BA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AAEA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA0uBA;;;;;;;;AAAA;AAUA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AAMA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAuCA;;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;AAAA;AAmBA;;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;AAAA;AAaA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA6BA;;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;AAAA;AAYA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;AAAA;AACA;AAWA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;AAAA;AAmBA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AAIA;;;;;;;;;;;AAAA;AAaA;;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAwCA;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAIA;;;;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;;;;;;;;;;;ACxjDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AADA;AAAA;AACA;AAfA;AACA;AAaA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACjrBA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAkBA;AACA;AAAA;;;;;;;;;;;;AClCA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;ACVA;AACA;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;;;;;;;;;;;;AChBA;AACA;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA,iBAaA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA,mBAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA3cA;AACA;AA2cA;AACA;;;;;;;;;;;;AC5dA;AACA;;;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACPA;AACA;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACnBA;AACA;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAAA;;;;;;;;;;;;AChBA;AACA;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;AC7FA;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClOA;AACA;AACA,aAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AADA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AADA;AAAA;AAMA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;ACrBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}