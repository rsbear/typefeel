{"ast":null,"code":"import _css from \"@emotion/css\";\nvar _jsxFileName = \"/Users/rsbear/dev/typefeel/pages/keyboards/catalog.tsx\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from \"react\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Link from \"next/link\";\nimport { text } from \"../../styles/text\";\nimport Tile from \"../../components/Tile\";\nimport { useSortKeyboardsQuery } from \"../../generated/graphql\";\n\nvar MarketKeyboards = function MarketKeyboards(_ref) {\n  var authUser = _ref.authUser;\n\n  var _useSortKeyboardsQuer = useSortKeyboardsQuery({\n    variables: {\n      where: {\n        market: true\n      }\n    }\n  }),\n      loading = _useSortKeyboardsQuer.loading,\n      error = _useSortKeyboardsQuer.error,\n      data = _useSortKeyboardsQuer.data;\n\n  return ___EmotionJSX(Layout, {\n    title: \"Keyboards\",\n    authUser: authUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, ___EmotionJSX(\"h1\", {\n    css: text.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Keyboards\"), !loading && data && ___EmotionJSX(\"div\", {\n    css: grid50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, data.sortKeyboards.map(function (k) {\n    return ___EmotionJSX(Link, {\n      href: \"/keyboard/[shortId]\",\n      as: \"/keyboard/\".concat(k.shortId),\n      key: k.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, ___EmotionJSX(Tile, {\n      image: k.images600[0],\n      mount: k.mount,\n      name: k.name,\n      size: k.size,\n      key: k.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default MarketKeyboards;\nvar grid50 = process.env.NODE_ENV === \"production\" ? {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\"\n} : {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yc2JlYXIvZGV2L3R5cGVmZWVsL3BhZ2VzL2tleWJvYXJkcy9jYXRhbG9nLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4Q2tCIiwiZmlsZSI6Ii9Vc2Vycy9yc2JlYXIvZGV2L3R5cGVmZWVsL3BhZ2VzL2tleWJvYXJkcy9jYXRhbG9nLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExheW91dCBmcm9tIFwiY29tcG9uZW50cy9sYXlvdXRzL0xheW91dFwiO1xuXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5cbmltcG9ydCB7IEdldFByb3BzIH0gZnJvbSBcImludGVyZmFjZXMvR2V0UHJvcHNcIjtcbmltcG9ydCB7IHRleHQgfSBmcm9tIFwic3R5bGVzL3RleHRcIjtcbmltcG9ydCBjc3MgZnJvbSBcIkBlbW90aW9uL2Nzc1wiO1xuaW1wb3J0IFRpbGUgZnJvbSBcImNvbXBvbmVudHMvVGlsZVwiO1xuaW1wb3J0IHsgdXNlU29ydEtleWJvYXJkc1F1ZXJ5IH0gZnJvbSBcImdlbmVyYXRlZC9ncmFwaHFsXCI7XG5cbmNvbnN0IE1hcmtldEtleWJvYXJkczogR2V0UHJvcHM8YW55PiA9ICh7IGF1dGhVc2VyIH0pID0+IHtcbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlU29ydEtleWJvYXJkc1F1ZXJ5KHtcbiAgICB2YXJpYWJsZXM6IHsgd2hlcmU6IHsgbWFya2V0OiB0cnVlIH0gfVxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQgdGl0bGU9XCJLZXlib2FyZHNcIiBhdXRoVXNlcj17YXV0aFVzZXJ9PlxuICAgICAgPGgxIGNzcz17dGV4dC5oZWFkaW5nfT5LZXlib2FyZHM8L2gxPlxuICAgICAgeyFsb2FkaW5nICYmIGRhdGEgJiYgKFxuICAgICAgICA8ZGl2IGNzcz17Z3JpZDUwfT5cbiAgICAgICAgICB7ZGF0YS5zb3J0S2V5Ym9hcmRzLm1hcCgoazogYW55KSA9PiAoXG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBocmVmPVwiL2tleWJvYXJkL1tzaG9ydElkXVwiXG4gICAgICAgICAgICAgIGFzPXtgL2tleWJvYXJkLyR7ay5zaG9ydElkfWB9XG4gICAgICAgICAgICAgIGtleT17ay5pZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGE+XG4gICAgICAgICAgICAgICAgPFRpbGVcbiAgICAgICAgICAgICAgICAgIGltYWdlPXtrLmltYWdlczYwMFswXX1cbiAgICAgICAgICAgICAgICAgIG1vdW50PXtrLm1vdW50fVxuICAgICAgICAgICAgICAgICAgbmFtZT17ay5uYW1lfVxuICAgICAgICAgICAgICAgICAgc2l6ZT17ay5zaXplfVxuICAgICAgICAgICAgICAgICAga2V5PXtrLmlkfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWFya2V0S2V5Ym9hcmRzO1xuXG5jb25zdCBncmlkNTAgPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogY2FsYyg1MCUgLSAxMHB4KSBjYWxjKDUwJSAtIDEwcHgpO1xuICBncmlkLWNvbHVtbi1nYXA6IDIwcHg7XG4gIGdyaWQtcm93LWdhcDogMjBweDtcbmA7XG4iXX0= */\"\n};","map":{"version":3,"sources":["/Users/rsbear/dev/typefeel/pages/keyboards/catalog.tsx"],"names":["React","Layout","Link","text","Tile","useSortKeyboardsQuery","MarketKeyboards","authUser","variables","where","market","loading","error","data","heading","grid50","sortKeyboards","map","k","shortId","id","images600","mount","name","size"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,IAAT;AAEA,OAAOC,IAAP;AACA,SAASC,qBAAT;;AAEA,IAAMC,eAA8B,GAAG,SAAjCA,eAAiC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,8BACtBF,qBAAqB,CAAC;AACrDG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAT;AAD0C,GAAD,CADC;AAAA,MAC/CC,OAD+C,yBAC/CA,OAD+C;AAAA,MACtCC,KADsC,yBACtCA,KADsC;AAAA,MAC/BC,IAD+B,yBAC/BA,IAD+B;;AAKvD,SACE,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAEN,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEJ,IAAI,CAACW,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,CAACH,OAAD,IAAYE,IAAZ,IACC;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,aAAL,CAAmBC,GAAnB,CAAuB,UAACC,CAAD;AAAA,WACtB,cAAC,IAAD;AACE,MAAA,IAAI,EAAC,qBADP;AAEE,MAAA,EAAE,sBAAeA,CAAC,CAACC,OAAjB,CAFJ;AAGE,MAAA,GAAG,EAAED,CAAC,CAACE,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,cAAC,IAAD;AACE,MAAA,KAAK,EAAEF,CAAC,CAACG,SAAF,CAAY,CAAZ,CADT;AAEE,MAAA,KAAK,EAAEH,CAAC,CAACI,KAFX;AAGE,MAAA,IAAI,EAAEJ,CAAC,CAACK,IAHV;AAIE,MAAA,IAAI,EAAEL,CAAC,CAACM,IAJV;AAKE,MAAA,GAAG,EAAEN,CAAC,CAACE,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADsB;AAAA,GAAvB,CADH,CAHJ,CADF;AA0BD,CA/BD;;AAiCA,eAAed,eAAf;AAEA,IAAMS,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ","sourcesContent":["import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\n\nimport Link from \"next/link\";\n\nimport { GetProps } from \"interfaces/GetProps\";\nimport { text } from \"styles/text\";\nimport css from \"@emotion/css\";\nimport Tile from \"components/Tile\";\nimport { useSortKeyboardsQuery } from \"generated/graphql\";\n\nconst MarketKeyboards: GetProps<any> = ({ authUser }) => {\n  const { loading, error, data } = useSortKeyboardsQuery({\n    variables: { where: { market: true } }\n  });\n\n  return (\n    <Layout title=\"Keyboards\" authUser={authUser}>\n      <h1 css={text.heading}>Keyboards</h1>\n      {!loading && data && (\n        <div css={grid50}>\n          {data.sortKeyboards.map((k: any) => (\n            <Link\n              href=\"/keyboard/[shortId]\"\n              as={`/keyboard/${k.shortId}`}\n              key={k.id}\n            >\n              <a>\n                <Tile\n                  image={k.images600[0]}\n                  mount={k.mount}\n                  name={k.name}\n                  size={k.size}\n                  key={k.id}\n                />\n              </a>\n            </Link>\n          ))}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default MarketKeyboards;\n\nconst grid50 = css`\n  display: grid;\n  grid-template-columns: calc(50% - 10px) calc(50% - 10px);\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}