{"ast":null,"code":"import _css from \"@emotion/css\";\nvar _jsxFileName = \"/Users/rsbear/dev/typefeel/pages/keysets/index.tsx\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../../components/layouts/Layout\";\nimport { useKeysetsQuery } from \"../../generated/graphql\";\nimport { text } from \"../../styles/text\";\nimport Tile from \"../../components/Tile\";\n\nconst Keysets = ({\n  authUser\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useKeysetsQuery();\n  return ___EmotionJSX(Layout, {\n    title: \"Keyboards\",\n    authUser: authUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, ___EmotionJSX(\"h1\", {\n    css: text.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Keysets\"), !loading && data && ___EmotionJSX(\"div\", {\n    css: grid50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, data.keysets.map(k => ___EmotionJSX(Link, {\n    href: \"/keyset/[shortId]\",\n    as: `/keyset/${k.shortId}`,\n    key: k.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ___EmotionJSX(Tile, {\n    image: k.images600[0],\n    mount: null,\n    name: k.name,\n    size: k.profile,\n    key: k.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))))));\n};\n\nexport default Keysets;\nconst grid50 = process.env.NODE_ENV === \"production\" ? {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\"\n} : {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yc2JlYXIvZGV2L3R5cGVmZWVsL3BhZ2VzL2tleXNldHMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDa0IiLCJmaWxlIjoiL1VzZXJzL3JzYmVhci9kZXYvdHlwZWZlZWwvcGFnZXMva2V5c2V0cy9pbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRkMgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcImNvbXBvbmVudHMvbGF5b3V0cy9MYXlvdXRcIjtcbmltcG9ydCB7IEdldFByb3BzIH0gZnJvbSBcImludGVyZmFjZXMvR2V0UHJvcHNcIjtcblxuaW1wb3J0IHsgdXNlS2V5c2V0c1F1ZXJ5IH0gZnJvbSBcImdlbmVyYXRlZC9ncmFwaHFsXCI7XG5cbmltcG9ydCB7IHRleHQgfSBmcm9tIFwic3R5bGVzL3RleHRcIjtcbmltcG9ydCBjc3MgZnJvbSBcIkBlbW90aW9uL2Nzc1wiO1xuaW1wb3J0IFRpbGUgZnJvbSBcImNvbXBvbmVudHMvVGlsZVwiO1xuXG5jb25zdCBLZXlzZXRzOiBHZXRQcm9wczxhbnk+ID0gKHsgYXV0aFVzZXIgfSkgPT4ge1xuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VLZXlzZXRzUXVlcnkoKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQgdGl0bGU9XCJLZXlib2FyZHNcIiBhdXRoVXNlcj17YXV0aFVzZXJ9PlxuICAgICAgPGgxIGNzcz17dGV4dC5oZWFkaW5nfT5LZXlzZXRzPC9oMT5cbiAgICAgIHshbG9hZGluZyAmJiBkYXRhICYmIChcbiAgICAgICAgPGRpdiBjc3M9e2dyaWQ1MH0+XG4gICAgICAgICAge2RhdGEua2V5c2V0cy5tYXAoKGs6IGFueSkgPT4gKFxuICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAgaHJlZj1cIi9rZXlzZXQvW3Nob3J0SWRdXCJcbiAgICAgICAgICAgICAgYXM9e2Ava2V5c2V0LyR7ay5zaG9ydElkfWB9XG4gICAgICAgICAgICAgIGtleT17ay5pZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGE+XG4gICAgICAgICAgICAgICAgPFRpbGVcbiAgICAgICAgICAgICAgICAgIGltYWdlPXtrLmltYWdlczYwMFswXX1cbiAgICAgICAgICAgICAgICAgIG1vdW50PXtudWxsfVxuICAgICAgICAgICAgICAgICAgbmFtZT17ay5uYW1lfVxuICAgICAgICAgICAgICAgICAgc2l6ZT17ay5wcm9maWxlfVxuICAgICAgICAgICAgICAgICAga2V5PXtrLmlkfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgS2V5c2V0cztcblxuY29uc3QgZ3JpZDUwID0gY3NzYFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGNhbGMoNTAlIC0gMTBweCkgY2FsYyg1MCUgLSAxMHB4KTtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyMHB4O1xuICBncmlkLXJvdy1nYXA6IDIwcHg7XG5gO1xuIl19 */\"\n};","map":{"version":3,"sources":["/Users/rsbear/dev/typefeel/pages/keysets/index.tsx"],"names":["React","Link","Layout","useKeysetsQuery","text","Tile","Keysets","authUser","loading","error","data","heading","grid50","keysets","map","k","shortId","id","images600","name","profile"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP;AAGA,SAASC,eAAT;AAEA,SAASC,IAAT;AAEA,OAAOC,IAAP;;AAEA,MAAMC,OAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,eAAe,EAAhD;AAEA,SACE,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAEI,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEH,IAAI,CAACO,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,CAACH,OAAD,IAAYE,IAAZ,IACC;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,CAAD,IAChB,cAAC,IAAD;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,EAAE,EAAG,WAAUA,CAAC,CAACC,OAAQ,EAF3B;AAGE,IAAA,GAAG,EAAED,CAAC,CAACE,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,IAAD;AACE,IAAA,KAAK,EAAEF,CAAC,CAACG,SAAF,CAAY,CAAZ,CADT;AAEE,IAAA,KAAK,EAAE,IAFT;AAGE,IAAA,IAAI,EAAEH,CAAC,CAACI,IAHV;AAIE,IAAA,IAAI,EAAEJ,CAAC,CAACK,OAJV;AAKE,IAAA,GAAG,EAAEL,CAAC,CAACE,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADD,CADH,CAHJ,CADF;AA0BD,CA7BD;;AA+BA,eAAeX,OAAf;AAEA,MAAMM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ","sourcesContent":["import React, { FC } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"components/layouts/Layout\";\nimport { GetProps } from \"interfaces/GetProps\";\n\nimport { useKeysetsQuery } from \"generated/graphql\";\n\nimport { text } from \"styles/text\";\nimport css from \"@emotion/css\";\nimport Tile from \"components/Tile\";\n\nconst Keysets: GetProps<any> = ({ authUser }) => {\n  const { loading, error, data } = useKeysetsQuery();\n\n  return (\n    <Layout title=\"Keyboards\" authUser={authUser}>\n      <h1 css={text.heading}>Keysets</h1>\n      {!loading && data && (\n        <div css={grid50}>\n          {data.keysets.map((k: any) => (\n            <Link\n              href=\"/keyset/[shortId]\"\n              as={`/keyset/${k.shortId}`}\n              key={k.id}\n            >\n              <a>\n                <Tile\n                  image={k.images600[0]}\n                  mount={null}\n                  name={k.name}\n                  size={k.profile}\n                  key={k.id}\n                />\n              </a>\n            </Link>\n          ))}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default Keysets;\n\nconst grid50 = css`\n  display: grid;\n  grid-template-columns: calc(50% - 10px) calc(50% - 10px);\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}