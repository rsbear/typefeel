{"ast":null,"code":"import _css from \"@emotion/css\";\nvar _jsxFileName = \"/Users/rsbear/dev/typefeel/pages/keyboards/index.tsx\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from \"react\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Link from \"next/link\";\nimport { text } from \"../../styles/text\";\nimport Tile from \"../../components/Tile\";\nimport { useKeyboardsQuery } from \"../../generated/graphql\";\n\nconst Keyboards = ({\n  authUser\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useKeyboardsQuery();\n  return ___EmotionJSX(Layout, {\n    title: \"Keyboards\",\n    authUser: authUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, ___EmotionJSX(\"h1\", {\n    css: text.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Keyboards\"), !loading && data && ___EmotionJSX(\"div\", {\n    css: grid50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, data.keyboards.map(k => ___EmotionJSX(Link, {\n    href: \"/keyboard/[shortId]\",\n    as: `/keyboard/${k.shortId}`,\n    key: k.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ___EmotionJSX(Tile, {\n    image: k.images600[0],\n    mount: k.mount,\n    name: k.name,\n    size: k.size,\n    key: k.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))))));\n};\n\nexport default Keyboards;\nconst grid50 = process.env.NODE_ENV === \"production\" ? {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\"\n} : {\n  name: \"186yoz4-grid50\",\n  styles: \"display:grid;grid-template-columns:calc(50% - 10px) calc(50% - 10px);grid-column-gap:20px;grid-row-gap:20px;;label:grid50;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yc2JlYXIvZGV2L3R5cGVmZWVsL3BhZ2VzL2tleWJvYXJkcy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNENrQiIsImZpbGUiOiIvVXNlcnMvcnNiZWFyL2Rldi90eXBlZmVlbC9wYWdlcy9rZXlib2FyZHMvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCJjb21wb25lbnRzL2xheW91dHMvTGF5b3V0XCI7XG5cbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcblxuaW1wb3J0IHsgR2V0UHJvcHMgfSBmcm9tIFwiaW50ZXJmYWNlcy9HZXRQcm9wc1wiO1xuaW1wb3J0IHsgdGV4dCB9IGZyb20gXCJzdHlsZXMvdGV4dFwiO1xuaW1wb3J0IGNzcyBmcm9tIFwiQGVtb3Rpb24vY3NzXCI7XG5pbXBvcnQgVGlsZSBmcm9tIFwiY29tcG9uZW50cy9UaWxlXCI7XG5pbXBvcnQgeyB1c2VLZXlib2FyZHNRdWVyeSB9IGZyb20gXCJnZW5lcmF0ZWQvZ3JhcGhxbFwiO1xuXG5jb25zdCBLZXlib2FyZHM6IEdldFByb3BzPGFueT4gPSAoeyBhdXRoVXNlciB9KSA9PiB7XG4gIGNvbnN0IHsgbG9hZGluZywgZXJyb3IsIGRhdGEgfSA9IHVzZUtleWJvYXJkc1F1ZXJ5KCk7XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0IHRpdGxlPVwiS2V5Ym9hcmRzXCIgYXV0aFVzZXI9e2F1dGhVc2VyfT5cbiAgICAgIDxoMSBjc3M9e3RleHQuaGVhZGluZ30+S2V5Ym9hcmRzPC9oMT5cbiAgICAgIHshbG9hZGluZyAmJiBkYXRhICYmIChcbiAgICAgICAgPGRpdiBjc3M9e2dyaWQ1MH0+XG4gICAgICAgICAge2RhdGEua2V5Ym9hcmRzLm1hcCgoazogYW55KSA9PiAoXG4gICAgICAgICAgICA8TGlua1xuICAgICAgICAgICAgICBocmVmPVwiL2tleWJvYXJkL1tzaG9ydElkXVwiXG4gICAgICAgICAgICAgIGFzPXtgL2tleWJvYXJkLyR7ay5zaG9ydElkfWB9XG4gICAgICAgICAgICAgIGtleT17ay5pZH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPGE+XG4gICAgICAgICAgICAgICAgPFRpbGVcbiAgICAgICAgICAgICAgICAgIGltYWdlPXtrLmltYWdlczYwMFswXX1cbiAgICAgICAgICAgICAgICAgIG1vdW50PXtrLm1vdW50fVxuICAgICAgICAgICAgICAgICAgbmFtZT17ay5uYW1lfVxuICAgICAgICAgICAgICAgICAgc2l6ZT17ay5zaXplfVxuICAgICAgICAgICAgICAgICAga2V5PXtrLmlkfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgS2V5Ym9hcmRzO1xuXG5jb25zdCBncmlkNTAgPSBjc3NgXG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogY2FsYyg1MCUgLSAxMHB4KSBjYWxjKDUwJSAtIDEwcHgpO1xuICBncmlkLWNvbHVtbi1nYXA6IDIwcHg7XG4gIGdyaWQtcm93LWdhcDogMjBweDtcbmA7XG4iXX0= */\"\n};","map":{"version":3,"sources":["/Users/rsbear/dev/typefeel/pages/keyboards/index.tsx"],"names":["React","Layout","Link","text","Tile","useKeyboardsQuery","Keyboards","authUser","loading","error","data","heading","grid50","keyboards","map","k","shortId","id","images600","mount","name","size"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,IAAT;AAEA,OAAOC,IAAP;AACA,SAASC,iBAAT;;AAEA,MAAMC,SAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,iBAAiB,EAAlD;AAEA,SACE,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAEE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEJ,IAAI,CAACQ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,CAACH,OAAD,IAAYE,IAAZ,IACC;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAoBC,CAAD,IAClB,cAAC,IAAD;AACE,IAAA,IAAI,EAAC,qBADP;AAEE,IAAA,EAAE,EAAG,aAAYA,CAAC,CAACC,OAAQ,EAF7B;AAGE,IAAA,GAAG,EAAED,CAAC,CAACE,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,IAAD;AACE,IAAA,KAAK,EAAEF,CAAC,CAACG,SAAF,CAAY,CAAZ,CADT;AAEE,IAAA,KAAK,EAAEH,CAAC,CAACI,KAFX;AAGE,IAAA,IAAI,EAAEJ,CAAC,CAACK,IAHV;AAIE,IAAA,IAAI,EAAEL,CAAC,CAACM,IAJV;AAKE,IAAA,GAAG,EAAEN,CAAC,CAACE,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADD,CADH,CAHJ,CADF;AA0BD,CA7BD;;AA+BA,eAAeX,SAAf;AAEA,MAAMM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ","sourcesContent":["import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\n\nimport Link from \"next/link\";\n\nimport { GetProps } from \"interfaces/GetProps\";\nimport { text } from \"styles/text\";\nimport css from \"@emotion/css\";\nimport Tile from \"components/Tile\";\nimport { useKeyboardsQuery } from \"generated/graphql\";\n\nconst Keyboards: GetProps<any> = ({ authUser }) => {\n  const { loading, error, data } = useKeyboardsQuery();\n\n  return (\n    <Layout title=\"Keyboards\" authUser={authUser}>\n      <h1 css={text.heading}>Keyboards</h1>\n      {!loading && data && (\n        <div css={grid50}>\n          {data.keyboards.map((k: any) => (\n            <Link\n              href=\"/keyboard/[shortId]\"\n              as={`/keyboard/${k.shortId}`}\n              key={k.id}\n            >\n              <a>\n                <Tile\n                  image={k.images600[0]}\n                  mount={k.mount}\n                  name={k.name}\n                  size={k.size}\n                  key={k.id}\n                />\n              </a>\n            </Link>\n          ))}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default Keyboards;\n\nconst grid50 = css`\n  display: grid;\n  grid-template-columns: calc(50% - 10px) calc(50% - 10px);\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}