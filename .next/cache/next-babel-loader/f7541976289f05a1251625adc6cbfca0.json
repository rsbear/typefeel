{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/typefeel/pages/keysets/interestchecks.tsx\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Tile from \"../../components/Tile\";\nimport { useKeysetsQuery } from \"../../generated/graphql\";\nimport { text } from \"../../styles/text\";\nimport { grid50 } from \"../../styles/main\";\n\nvar KeysetInterestChecks = function KeysetInterestChecks(_ref) {\n  var authUser = _ref.authUser;\n\n  var _useKeysetsQuery = useKeysetsQuery(),\n      loading = _useKeysetsQuery.loading,\n      error = _useKeysetsQuery.error,\n      data = _useKeysetsQuery.data;\n\n  return ___EmotionJSX(Layout, {\n    title: \"Keyboards\",\n    authUser: authUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, ___EmotionJSX(\"h1\", {\n    css: text.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Keysets\"), !loading && data && ___EmotionJSX(\"div\", {\n    css: grid50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, data.keysets.map(function (k) {\n    return ___EmotionJSX(Link, {\n      href: \"/keyset/[shortId]\",\n      as: \"/keyset/\".concat(k.shortId),\n      key: k.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, ___EmotionJSX(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, ___EmotionJSX(Tile, {\n      image: k.images600[0],\n      mount: null,\n      name: k.name,\n      size: k.profile,\n      key: k.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default KeysetInterestChecks;","map":{"version":3,"sources":["/Users/rsbear/dev/typefeel/pages/keysets/interestchecks.tsx"],"names":["React","Link","Layout","Tile","useKeysetsQuery","text","grid50","KeysetInterestChecks","authUser","loading","error","data","heading","keysets","map","k","shortId","id","images600","name","profile"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AAEA,SAASC,eAAT;AACA,SAASC,IAAT;AACA,SAASC,MAAT;;AAEA,IAAMC,oBAA6B,GAAG,SAAhCA,oBAAgC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,yBACrBJ,eAAe,EADM;AAAA,MAC9CK,OAD8C,oBAC9CA,OAD8C;AAAA,MACrCC,KADqC,oBACrCA,KADqC;AAAA,MAC9BC,IAD8B,oBAC9BA,IAD8B;;AAGtD,SACE,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAEH,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAEH,IAAI,CAACO,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEG,CAACH,OAAD,IAAYE,IAAZ,IACC;AAAK,IAAA,GAAG,EAAEL,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,UAACC,CAAD;AAAA,WAChB,cAAC,IAAD;AACE,MAAA,IAAI,EAAC,mBADP;AAEE,MAAA,EAAE,oBAAaA,CAAC,CAACC,OAAf,CAFJ;AAGE,MAAA,GAAG,EAAED,CAAC,CAACE,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,cAAC,IAAD;AACE,MAAA,KAAK,EAAEF,CAAC,CAACG,SAAF,CAAY,CAAZ,CADT;AAEE,MAAA,KAAK,EAAE,IAFT;AAGE,MAAA,IAAI,EAAEH,CAAC,CAACI,IAHV;AAIE,MAAA,IAAI,EAAEJ,CAAC,CAACK,OAJV;AAKE,MAAA,GAAG,EAAEL,CAAC,CAACE,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADgB;AAAA,GAAjB,CADH,CAHJ,CADF;AA0BD,CA7BD;;AA+BA,eAAeV,oBAAf","sourcesContent":["import React, { FC } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"components/layouts/Layout\";\nimport Tile from \"components/Tile\";\n\nimport { useKeysetsQuery } from \"generated/graphql\";\nimport { text } from \"styles/text\";\nimport { grid50 } from \"styles/main\";\n\nconst KeysetInterestChecks: FC<any> = ({ authUser }) => {\n  const { loading, error, data } = useKeysetsQuery();\n\n  return (\n    <Layout title=\"Keyboards\" authUser={authUser}>\n      <h1 css={text.heading}>Keysets</h1>\n      {!loading && data && (\n        <div css={grid50}>\n          {data.keysets.map((k: any) => (\n            <Link\n              href=\"/keyset/[shortId]\"\n              as={`/keyset/${k.shortId}`}\n              key={k.id}\n            >\n              <a>\n                <Tile\n                  image={k.images600[0]}\n                  mount={null}\n                  name={k.name}\n                  size={k.profile}\n                  key={k.id}\n                />\n              </a>\n            </Link>\n          ))}\n        </div>\n      )}\n    </Layout>\n  );\n};\n\nexport default KeysetInterestChecks;\n"]},"metadata":{},"sourceType":"module"}