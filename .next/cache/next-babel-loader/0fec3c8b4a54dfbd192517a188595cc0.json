{"ast":null,"code":"var _jsxFileName = \"/Users/rsbear/dev/typefeel/pages/dashboard/update/keyboard/[shortId]/announcement.tsx\";\nvar __jsx = React.createElement;\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nimport React from \"react\";\nimport Layout from \"../../../../../components/layouts/Layout\";\nimport { text } from \"../../../../../styles/text\";\nimport { useKeyboardQuery } from \"../../../../../generated/graphql\";\nimport { Formik } from \"formik\";\nimport { FormikArea } from \"../../../../../styles/inputs\";\nimport { Button } from \"../../../../../styles/buttons\";\n\nconst KeyboardMessage = ({\n  authUser,\n  shortId\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useKeyboardQuery({\n    variables: {\n      shortId\n    }\n  });\n  const kb = !loading && data && data.keyboard;\n  return ___EmotionJSX(Layout, {\n    title: \"Announcement\",\n    authUser: authUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, loading && ___EmotionJSX(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading...\"), error && ___EmotionJSX(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Oops, an error occured\"), !loading && data && data.keyboard && ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"h1\", {\n    css: text.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, kb.name, \" announcement\"), ___EmotionJSX(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Create an announcement about changes or updates to your project\"), ___EmotionJSX(Formik, {\n    initialValues: {\n      message: \"\"\n    },\n    onSubmit: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ({\n    values\n  }) => ___EmotionJSX(\"form\", {\n    onSubmit: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, ___EmotionJSX(FormikArea, {\n    icon: \"icon ion-ios-information-circle\",\n    margins: \"0 0 10px 0\",\n    type: \"text\",\n    placeholder: \"Annoucement message\",\n    name: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), ___EmotionJSX(Button, {\n    primary: \"submit\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Post announcement\")))));\n};\n\nKeyboardMessage.getInitialProps = async context => {\n  const {\n    shortId\n  } = context.query;\n  return {\n    shortId\n  };\n};\n\nexport default KeyboardMessage;","map":{"version":3,"sources":["/Users/rsbear/dev/typefeel/pages/dashboard/update/keyboard/[shortId]/announcement.tsx"],"names":["React","Layout","text","useKeyboardQuery","Formik","FormikArea","Button","KeyboardMessage","authUser","shortId","loading","error","data","variables","kb","keyboard","heading","name","message","values","getInitialProps","context","query"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP;AACA,SAASC,IAAT;AAEA,SAASC,gBAAT;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAAsBC,UAAtB;AACA,SAASC,MAAT;;AAEA,MAAMC,eAA8B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAChE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,gBAAgB,CAAC;AAAEU,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAAb,GAAD,CAAjD;AACA,QAAMK,EAAE,GAAG,CAACJ,OAAD,IAAYE,IAAZ,IAAoBA,IAAI,CAACG,QAApC;AACA,SACE,cAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,QAAQ,EAAEP,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFZ,EAGG,CAACD,OAAD,IAAYE,IAAZ,IAAoBA,IAAI,CAACG,QAAzB,IACC,oCACE;AAAI,IAAA,GAAG,EAAEb,IAAI,CAACc,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,EAAE,CAACG,IAA3B,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFF,EAKE,cAAC,MAAD;AAAQ,IAAA,aAAa,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAvB;AAAwC,IAAA,QAAQ,EAAE,MAAM,CAAE,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC;AAAM,IAAA,QAAQ,EAAE,MAAM,CAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,UAAD;AACE,IAAA,IAAI,EAAC,iCADP;AAEE,IAAA,OAAO,EAAC,YAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,IAAI,EAAC,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,cAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CAFJ,CALF,CAJJ,CADF;AA8BD,CAjCD;;AAmCAZ,eAAe,CAACa,eAAhB,GAAkC,MAAOC,OAAP,IAAwB;AACxD,QAAM;AAAEZ,IAAAA;AAAF,MAAcY,OAAO,CAACC,KAA5B;AACA,SAAO;AAAEb,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeF,eAAf","sourcesContent":["import React, { FC } from \"react\";\nimport Layout from \"components/layouts/Layout\";\nimport { text } from \"styles/text\";\nimport { GetProps } from \"interfaces/GetProps\";\nimport { useKeyboardQuery } from \"generated/graphql\";\nimport { Formik } from \"formik\";\nimport { FormikInput, FormikArea } from \"styles/inputs\";\nimport { Button } from \"styles/buttons\";\n\nconst KeyboardMessage: GetProps<any> = ({ authUser, shortId }) => {\n  const { loading, error, data } = useKeyboardQuery({ variables: { shortId } });\n  const kb = !loading && data && data.keyboard;\n  return (\n    <Layout title=\"Announcement\" authUser={authUser}>\n      {loading && <h2>Loading...</h2>}\n      {error && <h2>Oops, an error occured</h2>}\n      {!loading && data && data.keyboard && (\n        <>\n          <h1 css={text.heading}>{kb.name} announcement</h1>\n          <h4>\n            Create an announcement about changes or updates to your project\n          </h4>\n          <Formik initialValues={{ message: \"\" }} onSubmit={() => {}}>\n            {({ values }) => (\n              <form onSubmit={() => {}}>\n                <FormikArea\n                  icon=\"icon ion-ios-information-circle\"\n                  margins=\"0 0 10px 0\"\n                  type=\"text\"\n                  placeholder=\"Annoucement message\"\n                  name=\"message\"\n                />\n                <Button primary=\"submit\" type=\"button\">\n                  Post announcement\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nKeyboardMessage.getInitialProps = async (context: any) => {\n  const { shortId } = context.query;\n  return { shortId };\n};\n\nexport default KeyboardMessage;\n"]},"metadata":{},"sourceType":"module"}